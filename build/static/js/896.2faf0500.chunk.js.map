{"version":3,"file":"static/js/896.2faf0500.chunk.js","mappings":"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","sources":["../node_modules/proton-engine/src/math/MathUtil.js","../node_modules/proton-engine/src/math/Span.js","../node_modules/proton-engine/src/utils/WebGLUtil.js","../node_modules/proton-engine/src/utils/DomUtil.js","../node_modules/proton-engine/src/utils/ImgUtil.js","../node_modules/proton-engine/src/utils/Util.js","../node_modules/proton-engine/src/utils/Puid.js","../node_modules/proton-engine/src/core/Pool.js","../node_modules/proton-engine/src/debug/Stats.js","../node_modules/proton-engine/src/events/EventDispatcher.js","../node_modules/proton-engine/src/math/Integration.js","../node_modules/proton-engine/src/core/Proton.js","../node_modules/proton-engine/src/utils/Rgb.js","../node_modules/proton-engine/src/math/ease.js","../node_modules/proton-engine/src/math/Vector2D.js","../node_modules/proton-engine/src/core/Particle.js","../node_modules/proton-engine/src/utils/ColorUtil.js","../node_modules/proton-engine/src/math/Polar2D.js","../node_modules/proton-engine/src/math/Mat3.js","../node_modules/proton-engine/src/math/ArraySpan.js","../node_modules/proton-engine/src/math/Rectangle.js","../node_modules/proton-engine/src/initialize/Rate.js","../node_modules/proton-engine/src/initialize/Initialize.js","../node_modules/proton-engine/src/initialize/Life.js","../node_modules/proton-engine/src/zone/Zone.js","../node_modules/proton-engine/src/zone/PointZone.js","../node_modules/proton-engine/src/initialize/Position.js","../node_modules/proton-engine/src/initialize/Velocity.js","../node_modules/proton-engine/src/initialize/Mass.js","../node_modules/proton-engine/src/initialize/Radius.js","../node_modules/proton-engine/src/initialize/Body.js","../node_modules/proton-engine/src/behaviour/Behaviour.js","../node_modules/proton-engine/src/behaviour/Force.js","../node_modules/proton-engine/src/behaviour/Attraction.js","../node_modules/proton-engine/src/behaviour/RandomDrift.js","../node_modules/proton-engine/src/behaviour/Gravity.js","../node_modules/proton-engine/src/behaviour/Collision.js","../node_modules/proton-engine/src/behaviour/CrossZone.js","../node_modules/proton-engine/src/behaviour/Alpha.js","../node_modules/proton-engine/src/behaviour/Scale.js","../node_modules/proton-engine/src/behaviour/Rotate.js","../node_modules/proton-engine/src/behaviour/Color.js","../node_modules/proton-engine/src/behaviour/Cyclone.js","../node_modules/proton-engine/src/behaviour/Repulsion.js","../node_modules/proton-engine/src/behaviour/GravityWell.js","../node_modules/proton-engine/src/initialize/InitializeUtil.js","../node_modules/proton-engine/src/emitter/Emitter.js","../node_modules/proton-engine/src/emitter/BehaviourEmitter.js","../node_modules/proton-engine/src/emitter/FollowEmitter.js","../node_modules/proton-engine/src/render/BaseRenderer.js","../node_modules/proton-engine/src/render/CanvasRenderer.js","../node_modules/proton-engine/src/render/DomRenderer.js","../node_modules/proton-engine/src/render/EaselRenderer.js","../node_modules/proton-engine/src/render/PixelRenderer.js","../node_modules/proton-engine/src/render/PixiRenderer.js","../node_modules/proton-engine/src/utils/MStack.js","../node_modules/proton-engine/src/render/WebGLRenderer.js","../node_modules/proton-engine/src/render/CustomRenderer.js","../node_modules/proton-engine/src/zone/LineZone.js","../node_modules/proton-engine/src/zone/CircleZone.js","../node_modules/proton-engine/src/zone/RectZone.js","../node_modules/proton-engine/src/zone/ImageZone.js","../node_modules/proton-engine/src/debug/Debug.js","../node_modules/proton-engine/src/index.js","../node_modules/raf-manager/src/RAFManager.js","../node_modules/react-mouse-particles/src/index.js"],"sourcesContent":["const PI = 3.1415926;\nconst INFINITY = Infinity;\n\nconst MathUtil = {\n  PI: PI,\n  PIx2: PI * 2,\n  PI_2: PI / 2,\n  PI_180: PI / 180,\n  N180_PI: 180 / PI,\n  Infinity: -999,\n\n  isInfinity(num) {\n    return num === this.Infinity || num === INFINITY;\n  },\n\n  randomAToB(a, b, isInt = false) {\n    if (!isInt) return a + Math.random() * (b - a);\n    else return Math.floor(Math.random() * (b - a)) + a;\n  },\n\n  randomFloating(center, f, isInt) {\n    return this.randomAToB(center - f, center + f, isInt);\n  },\n\n  randomColor() {\n    return (\n      \"#\" +\n      (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n    );\n  },\n\n  randomZone(display) {},\n\n  floor(num, k = 4) {\n    const digits = Math.pow(10, k);\n    return Math.floor(num * digits) / digits;\n  },\n\n  degreeTransform(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16(num) {\n    return `#${num.toString(16)}`;\n  }\n};\n\nexport default MathUtil;\n","import Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Span {\n  constructor(a, b, center) {\n    if (Util.isArray(a)) {\n      this.isArray = true;\n      this.a = a;\n    } else {\n      this.isArray = false;\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this.center = Util.initValue(center, false);\n    }\n  }\n\n  getValue(isInt = false) {\n    if (this.isArray) {\n      return Util.getRandFromArray(this.a);\n    } else {\n      if (!this.center) {\n        return MathUtil.randomAToB(this.a, this.b, isInt);\n      } else {\n        return MathUtil.randomFloating(this.a, this.b, isInt);\n      }\n    }\n  }\n\n  /**\n   * Returns a new Span object\n   *\n   * @memberof Proton#Proton.Util\n   * @method setSpanValue\n   *\n   * @todo a, b and c should be 'Mixed' or 'Number'?\n   *\n   * @param {Mixed | Span} a\n   * @param {Mixed}               b\n   * @param {Mixed}               c\n   *\n   * @return {Span}\n   */\n  static setSpanValue(a, b, c) {\n    if (a instanceof Span) {\n      return a;\n    } else {\n      if (b === undefined) {\n        return new Span(a);\n      } else {\n        if (c === undefined) return new Span(a, b);\n        else return new Span(a, b, c);\n      }\n    }\n  }\n\n  /**\n   * Returns the value from a Span, if the param is not a Span it will return the given parameter\n   *\n   * @memberof Proton#Proton.Util\n   * @method getValue\n   *\n   * @param {Mixed | Span} pan\n   *\n   * @return {Mixed} the value of Span OR the parameter if it is not a Span\n   */\n  static getSpanValue(pan) {\n    return pan instanceof Span ? pan.getValue() : pan;\n  }\n}\n","export default {\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method ipot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Boolean}\n   */\n  ipot(length) {\n    return (length & (length - 1)) === 0;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method nhpot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Number}\n   */\n  nhpot(length) {\n    --length;\n    for (let i = 1; i < 32; i <<= 1) {\n      length = length | (length >> i);\n    }\n\n    return length + 1;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeTranslation\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} tx either 0 or 1\n   * @param {Number} ty either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeTranslation(tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeRotation\n   *\n   * @todo add description\n   * @todo add return description\n   *\n   * @param {Number} angleInRadians\n   *\n   * @return {Object}\n   */\n  makeRotation(angleInRadians) {\n    let c = Math.cos(angleInRadians);\n    let s = Math.sin(angleInRadians);\n\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeScale\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} sx either 0 or 1\n   * @param {Number} sy either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeScale(sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method matrixMultiply\n   *\n   * @todo add description\n   * @todo add a, b description\n   * @todo add return description\n   *\n   * @param {Object} a\n   * @param {Object} b\n   *\n   * @return {Object}\n   */\n  matrixMultiply(a, b) {\n    let a00 = a[0 * 3 + 0];\n    let a01 = a[0 * 3 + 1];\n    let a02 = a[0 * 3 + 2];\n    let a10 = a[1 * 3 + 0];\n    let a11 = a[1 * 3 + 1];\n    let a12 = a[1 * 3 + 2];\n    let a20 = a[2 * 3 + 0];\n    let a21 = a[2 * 3 + 1];\n    let a22 = a[2 * 3 + 2];\n    let b00 = b[0 * 3 + 0];\n    let b01 = b[0 * 3 + 1];\n    let b02 = b[0 * 3 + 2];\n    let b10 = b[1 * 3 + 0];\n    let b11 = b[1 * 3 + 1];\n    let b12 = b[1 * 3 + 2];\n    let b20 = b[2 * 3 + 0];\n    let b21 = b[2 * 3 + 1];\n    let b22 = b[2 * 3 + 2];\n\n    return [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  }\n};\n","export default {\n  /**\n   * Creates and returns a new canvas. The opacity is by default set to 0\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method createCanvas\n   *\n   * @param {String} $id the canvas' id\n   * @param {Number} $width the canvas' width\n   * @param {Number} $height the canvas' height\n   * @param {String} [$position=absolute] the canvas' position, default is 'absolute'\n   *\n   * @return {Object}\n   */\n  createCanvas(id, width, height, position = \"absolute\") {\n    const dom = document.createElement(\"canvas\");\n\n    dom.id = id;\n    dom.width = width;\n    dom.height = height;\n    dom.style.opacity = 0;\n    dom.style.position = position;\n    this.transform(dom, -500, -500, 0, 0);\n\n    return dom;\n  },\n\n  createDiv(id, width, height) {\n    const dom = document.createElement(\"div\");\n\n    dom.id = id;\n    dom.style.position = \"absolute\";\n    this.resize(dom, width, height);\n\n    return dom;\n  },\n\n  resize(dom, width, height) {\n    dom.style.width = width + \"px\";\n    dom.style.height = height + \"px\";\n    dom.style.marginLeft = -width / 2 + \"px\";\n    dom.style.marginTop = -height / 2 + \"px\";\n  },\n\n  /**\n   * Adds a transform: translate(), scale(), rotate() to a given div dom for all browsers\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method transform\n   *\n   * @param {HTMLDivElement} div\n   * @param {Number} $x\n   * @param {Number} $y\n   * @param {Number} $scale\n   * @param {Number} $rotate\n   */\n  transform(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate(${x}px, ${y}px) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"transform\", transform);\n  },\n\n  transform3d(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate3d(${x}px, ${y}px, 0) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"backfaceVisibility\", \"hidden\");\n    this.css3(div, \"transform\", transform);\n  },\n\n  css3(div, key, val) {\n    const bkey = key.charAt(0).toUpperCase() + key.substr(1);\n\n    div.style[`Webkit${bkey}`] = val;\n    div.style[`Moz${bkey}`] = val;\n    div.style[`O${bkey}`] = val;\n    div.style[`ms${bkey}`] = val;\n    div.style[`${key}`] = val;\n  }\n};\n","import WebGLUtil from \"./WebGLUtil\";\nimport DomUtil from \"./DomUtil\";\n\nconst imgsCache = {};\nconst canvasCache = {};\nlet canvasId = 0;\n\nexport default {\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    context.drawImage(image, rect.x, rect.y);\n    const imagedata = context.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    );\n    context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\n    return imagedata;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method getImgFromCache\n   *\n   * @todo add description\n   * @todo describe func\n   *\n   * @param {Mixed}               img\n   * @param {Proton.Particle}     particle\n   * @param {Boolean}             drawCanvas  set to true if a canvas should be saved into particle.data.canvas\n   * @param {Boolean}             func\n   */\n  getImgFromCache(img, callback, param) {\n    const src = typeof img === \"string\" ? img : img.src;\n\n    if (imgsCache[src]) {\n      callback(imgsCache[src], param);\n    } else {\n      const image = new Image();\n      image.onload = e => {\n        imgsCache[src] = e.target;\n        callback(imgsCache[src], param);\n      };\n\n      image.src = src;\n    }\n  },\n\n  getCanvasFromCache(img, callback, param) {\n    const src = img.src;\n\n    if (!canvasCache[src]) {\n      const width = WebGLUtil.nhpot(img.width);\n      const height = WebGLUtil.nhpot(img.height);\n\n      const canvas = DomUtil.createCanvas(\n        `proton_canvas_cache_${++canvasId}`,\n        width,\n        height\n      );\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(img, 0, 0, img.width, img.height);\n\n      canvasCache[src] = canvas;\n    }\n\n    callback && callback(canvasCache[src], param);\n\n    return canvasCache[src];\n  }\n};\n","import Span from \"../math/Span\";\nimport ImgUtil from \"./ImgUtil\";\n\nexport default {\n  /**\n   * Returns the default if the value is null or undefined\n   *\n   * @memberof Proton#Proton.Util\n   * @method initValue\n   *\n   * @param {Mixed} value a specific value, could be everything but null or undefined\n   * @param {Mixed} defaults the default if the value is null or undefined\n   */\n  initValue(value, defaults) {\n    value = value !== null && value !== undefined ? value : defaults;\n    return value;\n  },\n\n  /**\n   * Checks if the value is a valid array\n   *\n   * @memberof Proton#Proton.Util\n   * @method isArray\n   *\n   * @param {Array} value Any array\n   *\n   * @returns {Boolean}\n   */\n  isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n  },\n\n  /**\n   * Destroyes the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyArray\n   *\n   * @param {Array} array Any array\n   */\n  emptyArray(arr) {\n    if (arr) arr.length = 0;\n  },\n\n  toArray(arr) {\n    return this.isArray(arr) ? arr : [arr];\n  },\n\n  getRandFromArray(arr) {\n    if (!arr) return null;\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n\n  /**\n   * Destroyes the given object\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyObject\n   *\n   * @param {Object} obj Any object\n   */\n  emptyObject(obj, ignore = null) {\n    for (let key in obj) {\n      if (ignore && ignore.indexOf(key) > -1) continue;\n      delete obj[key];\n    }\n  },\n\n  /**\n   * Makes an instance of a class and binds the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method classApply\n   *\n   * @param {Function} constructor A class to make an instance from\n   * @param {Array} [args] Any array to bind it to the constructor\n   *\n   * @return {Object} The instance of constructor, optionally bind with args\n   */\n  classApply(constructor, args = null) {\n    if (!args) {\n      return new constructor();\n    } else {\n      const FactoryFunc = constructor.bind.apply(\n        constructor,\n        [null].concat(args)\n      );\n      return new FactoryFunc();\n    }\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method setVectorVal\n   *\n   * @todo add description for param `target`\n   * @todo add description for param `conf`\n   * @todo add description for function\n   *\n   * @param {Object} target\n   * @param {Object} conf\n   */\n  setVectorVal(particle, conf = null) {\n    if (!conf) return;\n\n    if (this.hasProp(conf, \"x\")) particle.p.x = conf[\"x\"];\n    if (this.hasProp(conf, \"y\")) particle.p.y = conf[\"y\"];\n\n    if (this.hasProp(conf, \"vx\")) particle.v.x = conf[\"vx\"];\n    if (this.hasProp(conf, \"vy\")) particle.v.y = conf[\"vy\"];\n\n    if (this.hasProp(conf, \"ax\")) particle.a.x = conf[\"ax\"];\n    if (this.hasProp(conf, \"ay\")) particle.a.y = conf[\"ay\"];\n\n    if (this.hasProp(conf, \"p\")) particle.p.copy(conf[\"p\"]);\n    if (this.hasProp(conf, \"v\")) particle.v.copy(conf[\"v\"]);\n    if (this.hasProp(conf, \"a\")) particle.a.copy(conf[\"a\"]);\n\n    if (this.hasProp(conf, \"position\")) particle.p.copy(conf[\"position\"]);\n    if (this.hasProp(conf, \"velocity\")) particle.v.copy(conf[\"velocity\"]);\n    if (this.hasProp(conf, \"accelerate\")) particle.a.copy(conf[\"accelerate\"]);\n  },\n\n  hasProp(target, key) {\n    if (!target) return false;\n    return target[key] !== undefined;\n    // return obj.hasOwnProperty(key);\n  },\n\n  /**\n   * set the prototype in a given prototypeObject\n   *\n   * @memberof Proton#Proton.Util\n   * @method setProp\n   *\n   * @todo add description for param `target`\n   * @todo translate desription from chinese to english\n   *\n   * @param {Object} target\n   * @param {Object} prototypeObject An object of single prototypes\n   *\n   * @return {Object} target\n   */\n  setProp(target, props) {\n    for (let prop in props) {\n      if (target.hasOwnProperty(prop)) {\n        target[prop] = Span.getSpanValue(props[prop]);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    return ImgUtil.getImageData(context, image, rect);\n  },\n\n  destroyAll(arr, param = null) {\n    let i = arr.length;\n\n    while (i--) {\n      try {\n        arr[i].destroy(param);\n      } catch (e) {}\n\n      delete arr[i];\n    }\n\n    arr.length = 0;\n  },\n\n  assign(target, source) {\n    if (typeof Object.assign !== \"function\") {\n      for (let key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    } else {\n      return Object.assign(target, source);\n    }\n  }\n};\n","const idsMap = {};\n\nconst Puid = {\n  _index: 0,\n  _cache: {},\n\n  id(type) {\n    if (idsMap[type] === undefined || idsMap[type] === null) idsMap[type] = 0;\n    return `${type}_${idsMap[type]++}`;\n  },\n\n  getId(target) {\n    let uid = this.getIdFromCache(target);\n    if (uid) return uid;\n\n    uid = `PUID_${this._index++}`;\n    this._cache[uid] = target;\n\n    return uid;\n  },\n\n  getIdFromCache(target) {\n    let obj, id;\n\n    for (id in this._cache) {\n      obj = this._cache[id];\n\n      if (obj === target) return id;\n      if (this.isBody(obj, target) && obj.src === target.src) return id;\n    }\n\n    return null;\n  },\n\n  isBody(obj, target) {\n    return (\n      typeof obj === \"object\" &&\n      typeof target === \"object\" &&\n      obj.isInner &&\n      target.isInner\n    );\n  },\n\n  getTarget(uid) {\n    return this._cache[uid];\n  }\n};\n\nexport default Puid;\n","/**\n * Pool is the cache pool of the proton engine, it is very important.\n *\n * get(target, params, uid)\n *  Class\n *    uid = Puid.getId -> Puid save target cache\n *    target.__puid = uid\n *\n *  body\n *    uid = Puid.getId -> Puid save target cache\n *\n *\n * expire(target)\n *  cache[target.__puid] push target\n *\n */\nimport Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\n\nexport default class Pool {\n  /**\n   * @memberof! Proton#\n   * @constructor\n   * @alias Proton.Pool\n   *\n   * @todo add description\n   * @todo add description of properties\n   *\n   * @property {Number} total\n   * @property {Object} cache\n   */\n  constructor(num) {\n    this.total = 0;\n    this.cache = {};\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method get\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  get(target, params, uid) {\n    let p;\n    uid = uid || target.__puid || Puid.getId(target);\n\n    if (this.cache[uid] && this.cache[uid].length > 0) {\n      p = this.cache[uid].pop();\n    } else {\n      p = this.createOrClone(target, params);\n    }\n\n    p.__puid = target.__puid || uid;\n    return p;\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method set\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object} target\n   *\n   * @return {Object}\n   */\n  expire(target) {\n    return this.getCache(target.__puid).push(target);\n  }\n\n  /**\n   * Creates a new class instance\n   *\n   * @todo add more documentation\n   *\n   * @method create\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target any Object or Function\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  createOrClone(target, params) {\n    this.total++;\n\n    if (this.create) {\n      return this.create(target, params);\n    } else if (typeof target === \"function\") {\n      return Util.classApply(target, params);\n    } else {\n      return target.clone();\n    }\n  }\n\n  /**\n   * @todo add description - what is in the cache?\n   *\n   * @method getCount\n   * @memberof Proton#Proton.Pool\n   *\n   * @return {Number}\n   */\n  getCount() {\n    let count = 0;\n    for (let id in this.cache) count += this.cache[id].length;\n    return count++;\n  }\n\n  /**\n   * Destroyes all items from Pool.cache\n   *\n   * @method destroy\n   * @memberof Proton#Proton.Pool\n   */\n  destroy() {\n    for (let id in this.cache) {\n      this.cache[id].length = 0;\n      delete this.cache[id];\n    }\n  }\n\n  /**\n   * Returns Pool.cache\n   *\n   * @method getCache\n   * @memberof Proton#Proton.Pool\n   * @private\n   *\n   * @param {Number} uid the unique id\n   *\n   * @return {Object}\n   */\n  getCache(uid = \"default\") {\n    if (!this.cache[uid]) this.cache[uid] = [];\n    return this.cache[uid];\n  }\n}\n","export default class Stats {\n  constructor(proton) {\n    this.proton = proton;\n    this.container = null;\n    this.type = 1;\n\n    this.emitterIndex = 0;\n    this.rendererIndex = 0;\n  }\n\n  update(style, body) {\n    this.add(style, body);\n\n    const emitter = this.getEmitter();\n    const renderer = this.getRenderer();\n    let str = \"\";\n\n    switch (this.type) {\n      case 2:\n        str += \"emitter:\" + this.proton.emitters.length + \"<br>\";\n        if (emitter) str += \"em speed:\" + emitter.emitSpeed + \"<br>\";\n        if (emitter) str += \"pos:\" + this.getEmitterPos(emitter);\n        break;\n\n      case 3:\n        if (emitter)\n          str += \"initializes:\" + emitter.initializes.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.initializes) +\n            \"</span><br>\";\n        if (emitter) str += \"behaviours:\" + emitter.behaviours.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.behaviours) +\n            \"</span><br>\";\n        break;\n\n      case 4:\n        if (renderer) str += renderer.name + \"<br>\";\n        if (renderer) str += \"body:\" + this.getCreatedNumber(renderer) + \"<br>\";\n        break;\n\n      default:\n        str += \"particles:\" + this.proton.getCount() + \"<br>\";\n        str += \"pool:\" + this.proton.pool.getCount() + \"<br>\";\n        str += \"total:\" + this.proton.pool.total;\n    }\n\n    this.container.innerHTML = str;\n  }\n\n  add(style, body) {\n    if (!this.container) {\n      this.type = 1;\n\n      this.container = document.createElement(\"div\");\n      this.container.style.cssText = [\n        \"position:absolute;bottom:0px;left:0;cursor:pointer;\",\n        \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\",\n        \"width:120px;height:50px;background-color:#002;color:#0ff;\"\n      ].join(\"\");\n\n      this.container.addEventListener(\n        \"click\",\n        e => {\n          this.type++;\n          if (this.type > 4) this.type = 1;\n        },\n        false\n      );\n\n      let bg, color;\n      switch (style) {\n        case 2:\n          bg = \"#201\";\n          color = \"#f08\";\n          break;\n\n        case 3:\n          bg = \"#020\";\n          color = \"#0f0\";\n          break;\n\n        default:\n          bg = \"#002\";\n          color = \"#0ff\";\n      }\n\n      this.container.style[\"background-color\"] = bg;\n      this.container.style[\"color\"] = color;\n    }\n\n    if (!this.container.parentNode) {\n      body = body || this.body || document.body;\n      body.appendChild(this.container);\n    }\n  }\n\n  getEmitter() {\n    return this.proton.emitters[this.emitterIndex];\n  }\n\n  getRenderer() {\n    return this.proton.renderers[this.rendererIndex];\n  }\n\n  concatArr(arr) {\n    let result = \"\";\n    if (!arr || !arr.length) return result;\n\n    for (let i = 0; i < arr.length; i++) {\n      result += (arr[i].name || \"\").substr(0, 1) + \".\";\n    }\n\n    return result;\n  }\n\n  getCreatedNumber(renderer) {\n    return renderer.pool.total || (renderer.cpool && renderer.cpool.total) || 0;\n  }\n\n  getEmitterPos(e) {\n    return Math.round(e.p.x) + \",\" + Math.round(e.p.y);\n  }\n}\n","/*\n * EventDispatcher\n * This code reference since http://createjs.com/.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = null;\n  }\n\n  static bind(target) {\n    target.prototype.dispatchEvent = EventDispatcher.prototype.dispatchEvent;\n\n    target.prototype.hasEventListener =\n      EventDispatcher.prototype.hasEventListener;\n\n    target.prototype.addEventListener =\n      EventDispatcher.prototype.addEventListener;\n\n    target.prototype.removeEventListener =\n      EventDispatcher.prototype.removeEventListener;\n\n    target.prototype.removeAllEventListeners =\n      EventDispatcher.prototype.removeAllEventListeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this._listeners) {\n      this._listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this._listeners[type]) this._listeners[type] = [];\n    this._listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this._listeners) return;\n    if (!this._listeners[type]) return;\n\n    const arr = this._listeners[type];\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      if (arr[i] === listener) {\n        if (length === 1) {\n          delete this._listeners[type];\n        }\n\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this._listeners = null;\n    else if (this._listeners) delete this._listeners[type];\n  }\n\n  dispatchEvent(type, args) {\n    let result = false;\n    const listeners = this._listeners;\n\n    if (type && listeners) {\n      let arr = listeners[type];\n      if (!arr) return result;\n\n      // arr = arr.slice();\n      // to avoid issues with items being removed or added during the dispatch\n\n      let handler;\n      let i = arr.length;\n      while (i--) {\n        handler = arr[i];\n        result = result || handler(args);\n      }\n    }\n\n    return !!result;\n  }\n\n  hasEventListener(type) {\n    const listeners = this._listeners;\n    return !!(listeners && listeners[type]);\n  }\n}\n","export default class Integration {\n  constructor(type) {\n    this.type = type;\n  }\n\n  calculate(particles, time, damping) {\n    this.eulerIntegrate(particles, time, damping);\n  }\n\n  // Euler Integrate\n  // https://rosettacode.org/wiki/Euler_method\n  eulerIntegrate(particle, time, damping) {\n    if (!particle.sleep) {\n      particle.old.p.copy(particle.p);\n      particle.old.v.copy(particle.v);\n\n      particle.a.multiplyScalar(1 / particle.mass);\n      particle.v.add(particle.a.multiplyScalar(time));\n      particle.p.add(particle.old.v.multiplyScalar(time));\n\n      if (damping) particle.v.multiplyScalar(damping);\n\n      particle.a.clear();\n    }\n  }\n}\n","import Pool from \"./Pool\";\nimport Util from \"../utils/Util\";\nimport Stats from \"../debug/Stats\";\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport MathUtil from \"../math/MathUtil\";\nimport Integration from \"../math/Integration\";\n\nexport default class Proton {\n  static USE_CLOCK = false;\n\n  // measure 1:100\n  static MEASURE = 100;\n  static EULER = \"euler\";\n  static RK2 = \"runge-kutta2\";\n\n  // event name\n  static PARTICLE_CREATED = \"PARTICLE_CREATED\";\n  static PARTICLE_UPDATE = \"PARTICLE_UPDATE\";\n  static PARTICLE_SLEEP = \"PARTICLE_SLEEP\";\n  static PARTICLE_DEAD = \"PARTICLE_DEAD\";\n\n  static EMITTER_ADDED = \"EMITTER_ADDED\";\n  static EMITTER_REMOVED = \"EMITTER_REMOVED\";\n\n  static PROTON_UPDATE = \"PROTON_UPDATE\";\n  static PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\";\n  static DEFAULT_INTERVAL = 0.0167;\n\n  static amendChangeTabsBug = true;\n\n  /**\n   * The constructor to add emitters\n   *\n   * @constructor Proton\n   *\n   * @todo proParticleCount is not in use\n   * @todo add more documentation of the single properties and parameters\n   *\n   * @param {Number} [proParticleCount] not in use?\n   * @param {Number} [integrationType=Proton.EULER]\n   *\n   * @property {String} [integrationType=Proton.EULER]\n   * @property {Array} emitters   All added emitter\n   * @property {Array} renderers  All added renderer\n   * @property {Number} time      The active time\n   * @property {Number} oldtime   The old time\n   */\n  constructor(integrationType) {\n    this.emitters = [];\n    this.renderers = [];\n\n    this.time = 0;\n    this.now = 0;\n    this.then = 0;\n    this.elapsed = 0;\n\n    this.stats = new Stats(this);\n    this.pool = new Pool(80);\n\n    this.integrationType = Util.initValue(integrationType, Proton.EULER);\n    this.integrator = new Integration(this.integrationType);\n\n    this._fps = \"auto\";\n    this._interval = Proton.DEFAULT_INTERVAL;\n  }\n\n  set fps(fps) {\n    this._fps = fps;\n    this._interval =\n      fps === \"auto\" ? Proton.DEFAULT_INTERVAL : MathUtil.floor(1 / fps, 7);\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  /**\n   * add a type of Renderer\n   *\n   * @method addRenderer\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Renderer} render\n   */\n  addRenderer(render) {\n    render.init(this);\n    this.renderers.push(render);\n  }\n\n  /**\n   * @name add a type of Renderer\n   *\n   * @method addRenderer\n   * @param {Renderer} render\n   */\n  removeRenderer(render) {\n    const index = this.renderers.indexOf(render);\n    this.renderers.splice(index, 1);\n    render.remove(this);\n  }\n\n  /**\n   * add the Emitter\n   *\n   * @method addEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Emitter} emitter\n   */\n  addEmitter(emitter) {\n    this.emitters.push(emitter);\n    emitter.parent = this;\n\n    this.dispatchEvent(Proton.EMITTER_ADDED, emitter);\n  }\n\n  /**\n   * Removes an Emitter\n   *\n   * @method removeEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Proton.Emitter} emitter\n   */\n  removeEmitter(emitter) {\n    const index = this.emitters.indexOf(emitter);\n    this.emitters.splice(index, 1);\n    emitter.parent = null;\n\n    this.dispatchEvent(Proton.EMITTER_REMOVED, emitter);\n  }\n\n  /**\n   * Updates all added emitters\n   *\n   * @method update\n   * @memberof Proton\n   * @instance\n   */\n  update() {\n    // 'auto' is the default browser refresh rate, the vast majority is 60fps\n    if (this._fps === \"auto\") {\n      this.dispatchEvent(Proton.PROTON_UPDATE);\n\n      if (Proton.USE_CLOCK) {\n        if (!this.then) this.then = new Date().getTime();\n        this.now = new Date().getTime();\n        this.elapsed = (this.now - this.then) * 0.001;\n        // Fix bugs such as chrome browser switching tabs causing excessive time difference\n        this.amendChangeTabsBug();\n\n        if (this.elapsed > 0) this.emittersUpdate(this.elapsed);\n        this.then = this.now;\n      } else {\n        this.emittersUpdate(Proton.DEFAULT_INTERVAL);\n      }\n\n      this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n    }\n\n    // If the fps frame rate is set\n    else {\n      if (!this.then) this.then = new Date().getTime();\n      this.now = new Date().getTime();\n      this.elapsed = (this.now - this.then) * 0.001;\n\n      if (this.elapsed > this._interval) {\n        this.dispatchEvent(Proton.PROTON_UPDATE);\n        this.emittersUpdate(this._interval);\n        // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n        this.then = this.now - (this.elapsed % this._interval) * 1000;\n        this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n      }\n    }\n  }\n\n  emittersUpdate(elapsed) {\n    let i = this.emitters.length;\n    while (i--) this.emitters[i].update(elapsed);\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method amendChangeTabsBug\n   * @memberof Proton\n   * @instance\n   */\n  amendChangeTabsBug() {\n    if (!Proton.amendChangeTabsBug) return;\n    if (this.elapsed > 0.5) {\n      this.then = new Date().getTime();\n      this.elapsed = 0;\n    }\n  }\n\n  /**\n   * Counts all particles from all emitters\n   *\n   * @method getCount\n   * @memberof Proton\n   * @instance\n   */\n  getCount() {\n    let total = 0;\n    let i = this.emitters.length;\n\n    while (i--) total += this.emitters[i].particles.length;\n    return total;\n  }\n\n  getAllParticles() {\n    let particles = [];\n    let i = this.emitters.length;\n\n    while (i--) particles = particles.concat(this.emitters[i].particles);\n    return particles;\n  }\n\n  destroyAllEmitters() {\n    Util.destroyAll(this.emitters);\n  }\n\n  /**\n   * Destroys everything related to this Proton instance. This includes all emitters, and all properties\n   *\n   * @method destroy\n   * @memberof Proton\n   * @instance\n   */\n  destroy(remove = false) {\n    const destroyOther = () => {\n      this.time = 0;\n      this.then = 0;\n      this.pool.destroy();\n\n      Util.destroyAll(this.emitters);\n      Util.destroyAll(this.renderers, this.getAllParticles());\n    };\n\n    if (remove) {\n      setTimeout(destroyOther, 200);\n    } else {\n      destroyOther();\n    }\n  }\n}\n\nEventDispatcher.bind(Proton);\n","export default class Rgb {\n  constructor(r = 255, g = 255, b = 255) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  reset() {\n    this.r = 255;\n    this.g = 255;\n    this.b = 255;\n  }\n}\n","import MathUtil from \"./MathUtil\";\n\nexport default {\n  easeLinear(value) {\n    return value;\n  },\n\n  easeInQuad(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine(value) {\n    return -Math.cos(value * MathUtil.PI_2) + 1;\n  },\n\n  easeOutSine(value) {\n    return Math.sin(value * MathUtil.PI_2);\n  },\n\n  easeInOutSine(value) {\n    return -0.5 * (Math.cos(Math.PI * value) - 1);\n  },\n\n  easeInExpo(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo(value) {\n    if (value === 0) return 0;\n\n    if (value === 1) return 1;\n\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack(value) {\n    let s = 1.70158;\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack(value) {\n    let s = 1.70158;\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack(value) {\n    let s = 1.70158;\n    if ((value /= 0.5) < 1)\n      return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  },\n\n  getEasing(ease) {\n    if (typeof ease === \"function\") return ease;\n    else return this[ease] || this.easeLinear;\n  }\n};\n","import MathUtil from \"../math/MathUtil\";\n\nexport default class Vector2D {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  getGradient() {\n    if (this.x !== 0) return Math.atan2(this.y, this.x);\n    else if (this.y > 0) return MathUtil.PI_2;\n    else if (this.y < 0) return -MathUtil.PI_2;\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  addXY(a, b) {\n    this.x += a;\n    this.y += b;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  divideScalar(s) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n    } else {\n      this.set(0, 0);\n    }\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  rotate(tha) {\n    const x = this.x;\n    const y = this.y;\n\n    this.x = x * Math.cos(tha) + y * Math.sin(tha);\n    this.y = -x * Math.sin(tha) + y * Math.cos(tha);\n\n    return this;\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n}\n","/** @typedef {import('../behaviour/Behaviour')} Behaviour */\n/** @typedef {import('../math/Vector2D')} Vector2D */\n/** @typedef {import('../utils/Rgb')} Rgb */\nimport Rgb from \"../utils/Rgb\";\nimport Puid from \"../utils/Puid\";\nimport Util from \"../utils/Util\";\nimport ease from \"../math/ease\";\nimport Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Particle {\n  /** @type string */\n  id = ''\n\n  /** @type {{p:Vector2D,v:Vector2D,a:Vector2D}} */\n  old = {}\n\n  /** @type {object} */\n  data = {}\n\n  /** @type {Behaviour[]} */\n  behaviours = []\n\n  /** @type {Vector2D} */\n  p = []\n\n  /** @type {Vector2D} */\n  v = []\n\n  /** @type {Vector2D} */\n  a = []\n\n  /** @type {Rgb} */\n  rgb = {}\n\n  /**\n   * the Particle class\n   *\n   * @class Proton.Particle\n   * @constructor\n   * @param {Object} pObj the parameters object;\n   * for example {life:3,dead:false}\n   */\n  constructor(conf) {\n    /**\n     * The particle's id;\n     * @property id\n     * @type {string}\n     */\n    this.name = \"Particle\";\n    this.id = Puid.id(this.name);\n    this.old = {};\n    this.data = {};\n    this.behaviours = [];\n\n    this.p = new Vector2D();\n    this.v = new Vector2D();\n    this.a = new Vector2D();\n    this.old.p = new Vector2D();\n    this.old.v = new Vector2D();\n    this.old.a = new Vector2D();\n\n    this.rgb = new Rgb();\n    this.reset();\n    conf && Util.setProp(this, conf);\n  }\n\n  getDirection() {\n    return Math.atan2(this.v.x, -this.v.y) * MathUtil.N180_PI;\n  }\n\n  reset() {\n    this.life = Infinity;\n    this.age = 0;\n\n    this.dead = false;\n    this.sleep = false;\n    this.body = null;\n    this.sprite = null;\n    this.parent = null;\n\n    this.energy = 1; // Energy Loss\n    this.mass = 1;\n    this.radius = 10;\n    this.alpha = 1;\n    this.scale = 1;\n    this.rotation = 0;\n    this.color = null;\n\n    this.p.set(0, 0);\n    this.v.set(0, 0);\n    this.a.set(0, 0);\n    this.old.p.set(0, 0);\n    this.old.v.set(0, 0);\n    this.old.a.set(0, 0);\n    this.easing = ease.easeLinear;\n\n    this.rgb.reset();\n    Util.emptyObject(this.data);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n      this.applyBehaviours(time, index);\n    }\n\n    if (this.age < this.life) {\n      const scale = this.easing(this.age / this.life);\n      this.energy = Math.max(1 - scale, 0);\n    } else {\n      this.destroy();\n    }\n  }\n\n  applyBehaviours(time, index) {\n    const length = this.behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.behaviours[i] &&\n        this.behaviours[i].applyBehaviour(this, time, index);\n    }\n  }\n\n  /**\n   * @param {Behaviour} behaviour\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    if (behaviour.hasOwnProperty(\"parents\")) behaviour.parents.push(this);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * @param {Behaviour[]} behaviours\n   */\n  addBehaviours(behaviours) {\n    const length = behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      const behaviour = this.behaviours.splice(index, 1);\n      behaviour.parents = null;\n    }\n  }\n\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  /**\n   * Destory this particle\n   * @method destroy\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export default {\n  /**\n   * @typedef  {Object} rgbObject\n   * @property {Number} r red value\n   * @property {Number} g green value\n   * @property {Number} b blue value\n   */\n  /**\n   * converts a hex value to a rgb object\n   *\n   * @memberof Proton#Proton.Util\n   * @method hexToRgb\n   *\n   * @param {String} h any hex value, e.g. #000000 or 000000 for black\n   *\n   * @return {rgbObject}\n   */\n  hexToRgb(h) {\n    const hex16 = h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    const r = parseInt(hex16.substring(0, 2), 16);\n    const g = parseInt(hex16.substring(2, 4), 16);\n    const b = parseInt(hex16.substring(4, 6), 16);\n\n    return { r, g, b };\n  },\n\n  /**\n   * converts a rgb value to a rgb string\n   *\n   * @memberof Proton#Proton.Util\n   * @method rgbToHex\n   *\n   * @param {Object | Proton.hexToRgb} rgb a rgb object like in {@link Proton#Proton.}\n   *\n   * @return {String} rgb()\n   */\n  rgbToHex(rbg) {\n    return `rgb(${rbg.r}, ${rbg.g}, ${rbg.b})`;\n  },\n\n  getHex16FromParticle(p) {\n    return Number(p.rgb.r) * 65536 + Number(p.rgb.g) * 256 + Number(p.rgb.b);\n  }\n};\n","import Vector2D from \"./Vector2D\";\n\nexport default class Polar2D {\n  constructor(r, tha) {\n    this.r = Math.abs(r) || 0;\n    this.tha = tha || 0;\n  }\n\n  set(r, tha) {\n    this.r = r;\n    this.tha = tha;\n    return this;\n  }\n\n  setR(r) {\n    this.r = r;\n    return this;\n  }\n\n  setTha(tha) {\n    this.tha = tha;\n    return this;\n  }\n\n  copy(p) {\n    this.r = p.r;\n    this.tha = p.tha;\n    return this;\n  }\n\n  toVector() {\n    return new Vector2D(this.getX(), this.getY());\n  }\n\n  getX() {\n    return this.r * Math.sin(this.tha);\n  }\n\n  getY() {\n    return -this.r * Math.cos(this.tha);\n  }\n\n  normalize() {\n    this.r = 1;\n    return this;\n  }\n\n  equals(v) {\n    return v.r === this.r && v.tha === this.tha;\n  }\n\n  clear() {\n    this.r = 0.0;\n    this.tha = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Polar2D(this.r, this.tha);\n  }\n}\n","const Mat3 = {\n  create(mat3) {\n    const mat = new Float32Array(9);\n    if (mat3) this.set(mat3, mat);\n\n    return mat;\n  },\n\n  set(mat1, mat2) {\n    for (let i = 0; i < 9; i++) mat2[i] = mat1[i];\n\n    return mat2;\n  },\n\n  multiply(mat, mat2, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b00 = mat2[0],\n      b01 = mat2[1],\n      b02 = mat2[2],\n      b10 = mat2[3],\n      b11 = mat2[4],\n      b20 = mat2[6],\n      b21 = mat2[7];\n\n    mat3[0] = b00 * a00 + b01 * a10;\n    mat3[1] = b00 * a01 + b01 * a11;\n    mat3[2] = a02 * b02;\n    mat3[3] = b10 * a00 + b11 * a10;\n    mat3[4] = b10 * a01 + b11 * a11;\n    mat3[6] = b20 * a00 + b21 * a10 + a20;\n    mat3[7] = b20 * a01 + b21 * a11 + a21;\n\n    return mat3;\n  },\n\n  inverse(mat, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b01 = a11,\n      b11 = -a10,\n      b21 = a21 * a10 - a11 * a20,\n      d = a00 * b01 + a01 * b11,\n      id;\n\n    id = 1 / d;\n    mat3[0] = b01 * id;\n    mat3[1] = -a01 * id;\n    mat3[3] = b11 * id;\n    mat3[4] = a00 * id;\n    mat3[6] = b21 * id;\n    mat3[7] = (-a21 * a00 + a01 * a20) * id;\n\n    return mat3;\n  },\n\n  multiplyVec2(m, vec, mat3) {\n    let x = vec[0],\n      y = vec[1];\n\n    mat3[0] = x * m[0] + y * m[3] + m[6];\n    mat3[1] = x * m[1] + y * m[4] + m[7];\n\n    return mat3;\n  }\n};\n\nexport default Mat3;\n","import Span from \"./Span\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"./MathUtil\";\n\nexport default class ArraySpan extends Span {\n  constructor(color) {\n    super();\n    this._arr = Util.toArray(color);\n  }\n\n  getValue() {\n    const val = Util.getRandFromArray(this._arr);\n    return val === \"random\" || val === \"Random\" ? MathUtil.randomColor() : val;\n  }\n\n  /**\n   * Make sure that the color is an instance of Proton.ArraySpan, if not it makes a new instance\n   *\n   * @method setSpanValue\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  static createArraySpan(arr) {\n    if (!arr) return null;\n\n    if (arr instanceof ArraySpan) return arr;\n    else return new ArraySpan(arr);\n  }\n}\n","export default class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n\n    this.width = w;\n    this.height = h;\n\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y) {\n    if (x <= this.right && x >= this.x && y <= this.bottom && y >= this.y)\n      return true;\n    else return false;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\n\nexport default class Rate {\n  /**\n   * The number of particles per second emission (a [particle]/b [s]);\n   * @namespace\n   * @memberof! Proton#\n   * @constructor\n   * @alias Rate\n   *\n   * @param {Array | Number | Span} numpan the number of each emission;\n   * @param {Array | Number | Span} timepan the time of each emission;\n   * for example: new Rate(new Span(10, 20), new Span(.1, .25));\n   */\n  constructor(numpan, timepan) {\n    this.numPan = Span.setSpanValue(Util.initValue(numpan, 1));\n    this.timePan = Span.setSpanValue(Util.initValue(timepan, 1));\n\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.init();\n  }\n\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.startTime = 0;\n      this.nextTime = this.timePan.getValue();\n\n      if (this.numPan.b === 1) {\n        if (this.numPan.getValue(false) > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue(true);\n      }\n    }\n\n    return 0;\n  }\n}\n","export default class Initialize {\n  reset() {}\n\n  init(emitter, particle) {\n    if (particle) {\n      this.initialize(particle);\n    } else {\n      this.initialize(emitter);\n    }\n  }\n\n  // sub class init\n  initialize(target) {}\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Life extends Initialize {\n  constructor(a, b, c) {\n    super();\n\n    this.lifePan = Span.setSpanValue(a, b, c);\n    this.name = \"Life\";\n  }\n\n  initialize(target) {\n    if (this.lifePan.a === Infinity) target.life = Infinity;\n    else target.life = this.lifePan.getValue();\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\n\nexport default class Zone {\n  constructor() {\n    this.vector = new Vector2D(0, 0);\n    this.random = 0;\n    this.crossType = \"dead\";\n    this.alert = true;\n  }\n\n  getPosition() {}\n\n  crossing(particle) {}\n}\n","import Zone from \"./Zone\";\n\nexport default class PointZone extends Zone {\n  constructor(x, y) {\n    super();\n\n    this.x = x;\n    this.y = y;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    if (this.alert) {\n      console.error(\"Sorry, PointZone does not support crossing method!\");\n      this.alert = false;\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport PointZone from \"../zone/PointZone\";\nimport Initialize from \"./Initialize\";\n\nexport default class Position extends Initialize {\n  constructor(zone) {\n    super();\n    this.zone = Util.initValue(zone, new PointZone());\n    this.name = \"Position\";\n  }\n\n  reset(zone) {\n    this.zone = Util.initValue(zone, new PointZone());\n  }\n\n  initialize(target) {\n    this.zone.getPosition();\n\n    target.p.x = this.zone.vector.x;\n    target.p.y = this.zone.vector.y;\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport Polar2D from \"../math/Polar2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Velocity extends Initialize {\n  constructor(rpan, thapan, type) {\n    super();\n\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n\n    this.name = \"Velocity\";\n  }\n\n  reset(rpan, thapan, type) {\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n  }\n\n  normalizeVelocity(vr) {\n    return vr * Proton.MEASURE;\n  }\n\n  initialize(target) {\n    if (this.type === \"p\" || this.type === \"P\" || this.type === \"polar\") {\n      const polar2d = new Polar2D(\n        this.normalizeVelocity(this.rPan.getValue()),\n        this.thaPan.getValue() * MathUtil.PI_180\n      );\n\n      target.v.x = polar2d.getX();\n      target.v.y = polar2d.getY();\n    } else {\n      target.v.x = this.normalizeVelocity(this.rPan.getValue());\n      target.v.y = this.normalizeVelocity(this.thaPan.getValue());\n    }\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Mass extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.massPan = Span.setSpanValue(a, b, c);\n    this.name = \"Mass\";\n  }\n\n  initialize(target) {\n    target.mass = this.massPan.getValue();\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Radius extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.radius = Span.setSpanValue(a, b, c);\n\n    this.name = \"Radius\";\n  }\n\n  reset(a, b, c) {\n    this.radius = Span.setSpanValue(a, b, c);\n  }\n\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.data.oldRadius = particle.radius;\n  }\n}\n","import Util from \"../utils/Util\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Initialize from \"./Initialize\";\n\nexport default class Body extends Initialize {\n  constructor(image, w, h) {\n    super();\n\n    this.image = this.setSpanValue(image);\n    this.w = Util.initValue(w, 20);\n    this.h = Util.initValue(h, this.w);\n    this.name = \"Body\";\n  }\n\n  initialize(particle) {\n    const imageTarget = this.image.getValue();\n\n    if (typeof imageTarget === \"string\") {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        src: imageTarget,\n        isInner: true,\n        inner: true\n      };\n    } else {\n      particle.body = imageTarget;\n    }\n  }\n\n  setSpanValue(image) {\n    return image instanceof ArraySpan ? image : new ArraySpan(image);\n  }\n}\n","import Proton from '../core/Proton';\nimport Util from '../utils/Util';\nimport ease from '../math/ease';\n\nexport default class Behaviour {\n    static id = 0;\n\n    /**\n     * The Behaviour class is the base for the other Behaviour\n     *\n     * @memberof! -\n     * @interface\n     * @alias Proton.Behaviour\n     *\n     * @param {Number} life \tthe behaviours life\n     * @param {String} easing \tThe behaviour's decaying trend, for example ease.easeOutQuart\n     *\n     * @property {String}  id \t\tThe behaviours id\n     * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n     * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n     * @property {Number}  age=0 \tHow long the particle should be 'alife'\n     * @property {Number}  energy=1\n     * @property {Boolean} dead=false The particle is dead at first\n     * @property {Array}   parents \tThe behaviour's parents array\n     * @property {String}  name \tThe behaviour name\n     */\n    constructor(life, easing) {\n\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n\n        this.age = 0;\n        this.energy = 1;\n        this.dead = false;\n        this.parents = [];\n\n        this.id = `Behaviour_${Behaviour.id++}`;\n        this.name = 'Behaviour';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} [life=Infinity] \t\tthis behaviour's life\n     * @param {String} [easing=easeLinear] \tthis behaviour's easing\n     */\n    reset(life, easing) {\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n    }\n\n    /**\n     * Normalize a force by 1:100;\n     *\n     * @method normalizeForce\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Vector2D} force\n     */\n    normalizeForce(force) {\n        return force.multiplyScalar(Proton.MEASURE);\n    }\n\n    /**\n     * Normalize a value by 1:100;\n     *\n     * @method normalizeValue\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} value\n     */\n    normalizeValue(value) {\n        return value * Proton.MEASURE;\n    }\n\n    /**\n     * Initialize the behaviour's parameters for all particles\n     *\n     * @method initialize\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     */\n    initialize(particle) {}\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} \t\t\ttime the integrate time 1/ms\n     * @param {Int} \t\t\tindex the particle index\n     */\n    calculate(particle, time, index) {\n        this.age += time;\n\n        if (this.age >= this.life || this.dead) {\n            this.energy = 0;\n            this.dead = true;\n            this.destroy();\n        } else {\n            const scale = this.easing(particle.age / particle.life);\n            this.energy = Math.max(1 - scale, 0);\n        }\n    }\n\n    /**\n     * Destory this behaviour\n     *\n     * @method destroy\n     * @memberof Proton.Behaviour\n     * @instance\n     */\n    destroy() {\n        let i = this.parents.length;\n        while (i--) {\n            this.parents[i].removeBehaviour(this);\n        }\n\n        this.parents.length = 0;\n    }\n}\n","import Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Force extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Force\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(fx, fy, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\t\tthis.name = 'Force';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(fx, fy, life, easing) {\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.a.add(this.force);\n\t}\n}","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Attraction extends Behaviour {\n  /**\n   * This behaviour let the particles follow one specific Proton.Vector2D\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Attraction\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Proton.Vector2D} targetPosition\n   * @property {Number} radius\n   * @property {Number} force\n   * @property {Number} radiusSq\n   * @property {Proton.Vector2D} attractionForce\n   * @property {Number} lengthSq\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(life, easing);\n\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    this.name = \"Attraction\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Attraction\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Attraction\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.p);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > 0.00004 && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.multiplyScalar(this.force);\n\n      particle.a.add(this.attractionForce);\n    }\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class RandomDrift extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias RandomDrift\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} time The time of the drift\n   * @property {String} name The Behaviour name\n   */\n  constructor(driftX, driftY, delay, life, easing) {\n    super(life, easing);\n\n    this.reset(driftX, driftY, delay);\n    this.time = 0;\n    this.name = \"RandomDrift\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(driftX, driftY, delay, life, easing) {\n    this.panFoce = new Vector2D(driftX, driftY);\n    this.panFoce = this.normalizeForce(this.panFoce);\n    this.delay = delay;\n\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.data.time = 0;\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.data.time += time;\n\n    if (particle.data.time >= this.delay) {\n      particle.a.addXY(\n        MathUtil.randomAToB(-this.panFoce.x, this.panFoce.x),\n        MathUtil.randomAToB(-this.panFoce.y, this.panFoce.y)\n      );\n\n      particle.data.time = 0;\n    }\n  }\n}\n","import Force from './Force';\n\nexport default class Gravity extends Force {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Force\n\t * @constructor\n\t * @alias Proton.Gravity\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(g, life, easing) {\n\t\tsuper(0, g, life, easing);\n\t\tthis.name = 'Gravity';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Gravity\n\t * @instance\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(g, life, easing) {\n\t\tsuper.reset(0, g, life, easing);\n\t}\n}","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Collision extends Behaviour {\n\n\t/**\n\t * The callback after collision\n\t *\n\t * @callback Callback\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Proton.Paritcle} otherParticle\n\t */\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Collision\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(emitter, mass, callback, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(emitter, mass, callback);\n\t\tthis.name = 'Collision';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method reset\n\t * @instance\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} \t\t\t[life=Infinity] \tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(emitter, mass, callback, life, easing) {\n\t\tthis.emitter = Util.initValue(emitter, null);\n\t\tthis.mass = Util.initValue(mass, true);\n\t\tthis.callback = Util.initValue(callback, null);\n\n\t\tthis.collisionPool = [];\n\t\tthis.delta = new Vector2D();\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method applyBehaviour\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tconst newPool = this.emitter ? this.emitter.particles.slice(index) : this.pool.slice(index);\n\t\tconst length = newPool.length;\n\n\t\tlet otherParticle;\n\t\tlet lengthSq;\n\t\tlet overlap;\n\t\tlet totalMass;\n\t\tlet averageMass1, averageMass2;\n\t\tlet i;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\totherParticle = newPool[i];\n\n\t\t\tif (otherParticle !== particle) {\n\t\t\t\tthis.delta.copy(otherParticle.p);\n\t\t\t\tthis.delta.sub(particle.p);\n\n\t\t\t\tlengthSq = this.delta.lengthSq();\n\t\t\t\tconst distance = particle.radius + otherParticle.radius;\n\n\t\t\t\tif (lengthSq <= distance * distance) {\n\t\t\t\t\toverlap = distance - Math.sqrt(lengthSq);\n\t\t\t\t\toverlap += 0.5;\n\n\t\t\t\t\ttotalMass = particle.mass + otherParticle.mass;\n\t\t\t\t\taverageMass1 = this.mass ? otherParticle.mass / totalMass : 0.5;\n\t\t\t\t\taverageMass2 = this.mass ? particle.mass / totalMass : 0.5;\n\n\t\t\t\t\tparticle.p.add(this.delta.clone().normalize().multiplyScalar(overlap * -averageMass1));\n\t\t\t\t\totherParticle.p.add(this.delta.normalize().multiplyScalar(overlap * averageMass2));\n\n\t\t\t\t\tthis.callback && this.callback(particle, otherParticle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","import Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class CrossZone extends Behaviour {\n\n    /**\n     * Defines what happens if the particles come to the end of the specified zone\n     *\n     * @memberof! Proton#\n     * @augments Proton.Behaviour\n     * @constructor\n     * @alias Proton.CrossZone\n     *\n     * @param {Proton.Zone} zone \t\t\t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \t\t\twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \t\t\tthis behaviour's life\n     * @param {String} \t\t[easing=ease.easeLinear] \tthis behaviour's easing\n     *\n     * @property {String} name The Behaviour name\n     */\n    constructor(zone, crossType, life, easing) {\n        super(life, easing);\n\n        this.reset(zone, crossType);\n        this.name = 'CrossZone';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Zone} zone \t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \tthis behaviour's life\n     * @param {String} \t\t[easing=easeLinear]\tthis behaviour's easing\n     */\n    reset(zone, crossType, life, easing) {\n        this.zone = zone;\n        this.zone.crossType = Util.initValue(crossType, 'dead');\n\n        life && super.reset(life, easing);\n    }\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} the integrate time 1/ms\n     * @param {Int} the particle index\n     */\n    applyBehaviour(particle, time, index) {\n        this.calculate(particle, time, index);\n        this.zone.crossing(particle);\n    };\n}","import Util from \"../utils/Util\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Alpha extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Alpha\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Alpha\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Sets the new alpha value of the particle\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle A single Proton generated particle\n   */\n  initialize(particle) {\n    particle.data.alphaA = this.a.getValue();\n\n    if (this.same) particle.data.alphaB = particle.data.alphaA;\n    else particle.data.alphaB = this.b.getValue();\n  }\n\n  /**\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    particle.alpha =\n      particle.data.alphaB +\n      (particle.data.alphaA - particle.data.alphaB) * this.energy;\n\n    if (particle.alpha < 0.001) particle.alpha = 0;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Scale extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Scale\n\t *\n\t * @todo add description for 'a' and 'b'\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(a, b, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(a, b);\n\t\tthis.name = 'Scale';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 1));\n\t\tthis.b = Span.setSpanValue(b);\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.data.scaleA = this.a.getValue();\n\t\tparticle.data.oldRadius = particle.radius;\n\t\tparticle.data.scaleB = this.same ? particle.data.scaleA : this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.scale = particle.data.scaleB + (particle.data.scaleA - particle.data.scaleB) * this.energy;\n\n\t\tif (particle.scale < 0.0001) particle.scale = 0;\n\t\tparticle.radius = particle.data.oldRadius * particle.scale;\n\t}\n}","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Rotate extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Rotate\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} [influence=Velocity] The rotation's influence\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(influence, b, style, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(influence, b, style);\n\t\tthis.name = 'Rotate';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} a\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, style, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 'Velocity'));\n\t\tthis.b = Span.setSpanValue(Util.initValue(b, 0));\n\t\tthis.style = Util.initValue(style, 'to');\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.rotation = this.a.getValue();\n\t\tparticle.data.rotationA = this.a.getValue();\n\n\t\tif (!this.same) particle.data.rotationB = this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\n\t\tif (!this.same) {\n\t\t\tif (this.style === 'to' || this.style === 'TO' || this.style === '_') {\n\t\t\t\tparticle.rotation += particle.data.rotationB + (particle.data.rotationA - particle.data.rotationB) * this.energy\n\t\t\t} else {\n\t\t\t\tparticle.rotation += particle.data.rotationB;\n\t\t\t}\n\t\t} else if (this.a.a === 'V' || this.a.a === 'Velocity' || this.a.a === 'v') {\n\t\t\t// beta...\n\t\t\tparticle.rotation = particle.getDirection();\n\t\t}\n\t}\n\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Color extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Color\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Color\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.a = ArraySpan.createArraySpan(a);\n    this.b = ArraySpan.createArraySpan(b);\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.color = this.a.getValue();\n    particle.data.colorA = ColorUtil.hexToRgb(particle.color);\n\n    if (this.b) particle.data.colorB = ColorUtil.hexToRgb(this.b.getValue());\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.b) {\n      this.calculate(particle, time, index);\n\n      particle.rgb.r =\n        particle.data.colorB.r +\n        (particle.data.colorA.r - particle.data.colorB.r) * this.energy;\n      particle.rgb.g =\n        particle.data.colorB.g +\n        (particle.data.colorA.g - particle.data.colorB.g) * this.energy;\n      particle.rgb.b =\n        particle.data.colorB.b +\n        (particle.data.colorA.b - particle.data.colorB.b) * this.energy;\n\n      particle.rgb.r = Math.floor(particle.rgb.r);\n      particle.rgb.g = Math.floor(particle.rgb.g);\n      particle.rgb.b = Math.floor(particle.rgb.b);\n    } else {\n      particle.rgb.r = particle.data.colorA.r;\n      particle.rgb.g = particle.data.colorA.g;\n      particle.rgb.b = particle.data.colorA.b;\n    }\n  }\n}\n","import MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nconst CHANGING = \"changing\";\n\nexport default class Cyclone extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Cyclone\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(angle, force, life, easing) {\n    super(life, easing);\n    this.setAngleAndForce(angle, force);\n    this.name = \"Cyclone\";\n  }\n\n  setAngleAndForce(angle, force) {\n    this.force = CHANGING;\n    this.angle = MathUtil.PI / 2;\n\n    if (angle === \"right\") {\n      this.angle = MathUtil.PI / 2;\n    } else if (angle === \"left\") {\n      this.angle = -MathUtil.PI / 2;\n    } else if (angle === \"random\") {\n      this.angle = \"random\";\n    } else if (angle instanceof Span) {\n      this.angle = \"span\";\n      this.span = angle;\n    } else if (angle) {\n      this.angle = angle;\n    }\n\n    if (\n      String(force).toLowerCase() === \"changing\" ||\n      String(force).toLowerCase() === \"chang\" ||\n      String(force).toLowerCase() === \"auto\"\n    ) {\n      this.force = CHANGING;\n    } else if (force) {\n      this.force = force;\n    }\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(angle, force, life, easing) {\n    this.angle = MathUtil.PI / 2;\n    this.setAngleAndForce(angle, force);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    if (this.angle === \"random\") {\n      particle.data.cangle = MathUtil.randomAToB(-MathUtil.PI, MathUtil.PI);\n    } else if (this.angle === \"span\") {\n      particle.data.cangle = this.span.getValue();\n    }\n\n    particle.data.cyclone = new Vector2D(0, 0);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    let length;\n    let gradient = particle.v.getGradient();\n    if (this.angle === \"random\" || this.angle === \"span\") {\n      gradient += particle.data.cangle;\n    } else {\n      gradient += this.angle;\n    }\n\n    if (this.force === CHANGING) {\n      length = particle.v.length() / 100;\n    } else {\n      length = this.force;\n    }\n\n    particle.data.cyclone.x = length * Math.cos(gradient);\n    particle.data.cyclone.y = length * Math.sin(gradient);\n    particle.data.cyclone = this.normalizeForce(particle.data.cyclone);\n    particle.a.add(particle.data.cyclone);\n  }\n}\n","import Attraction from './Attraction';\n\nexport default class Repulsion extends Attraction {\n\n\t/**\n\t * The oppisite of Proton.Attraction - turns the force\n\t *\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Attraction\n\t * @constructor\n\t * @alias Proton.Repulsion\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {Number} force\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(targetPosition, force, radius, life, easing) {\n\t\tsuper(targetPosition, force, radius, life, easing);\n\n\t\tthis.force *= -1;\n\t\tthis.name = 'Repulsion';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Repulsion\n\t * @instance\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(targetPosition, force, radius, life, easing) {\n\t\tsuper.reset(targetPosition, force, radius, life, easing);\n\t\tthis.force *= -1;\n\t}\n}\n","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class GravityWell extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Behaviour\n\t * @constructor\n\t * @alias GravityWell\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(centerPoint, force, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tthis.name = 'GravityWell';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t */\n\treset(centerPoint, force, life, easing) {\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tlife && super.reset(life, easing);\n\t};\n\n\t/**\n\t * @inheritdoc\n\t */\n\tinitialize(particle) {\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.distanceVec.set(this.centerPoint.x - particle.p.x, this.centerPoint.y - particle.p.y);\n\t\tconst distanceSq = this.distanceVec.lengthSq();\n\n\t\tif (distanceSq !== 0) {\n\t\t\tconst distance = this.distanceVec.length();\n\t\t\tconst factor = (this.force * time) / (distanceSq * distance);\n\n\t\t\tparticle.v.x += factor * this.distanceVec.x;\n\t\t\tparticle.v.y += factor * this.distanceVec.y;\n\t\t}\n\t}\n}","import Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default {\n  initialize(emitter, particle, initializes) {\n    const length = initializes.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      if (initializes[i] instanceof Initialize) {\n        initializes[i].init(emitter, particle);\n      } else {\n        this.init(emitter, particle, initializes[i]);\n      }\n    }\n\n    this.bindEmitter(emitter, particle);\n  },\n\n  // init\n  init(emitter, particle, initialize) {\n    Util.setProp(particle, initialize);\n    Util.setVectorVal(particle, initialize);\n  },\n\n  bindEmitter(emitter, particle) {\n    if (emitter.bindEmitter) {\n      particle.p.add(emitter.p);\n      particle.v.add(emitter.v);\n      particle.a.add(emitter.a);\n\n      particle.v.rotate(MathUtil.degreeTransform(emitter.rotation));\n    }\n  }\n};\n","import Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\nimport Particle from \"../core/Particle\";\nimport EventDispatcher from \"../events/EventDispatcher\";\n\nimport Rate from \"../initialize/Rate\";\nimport InitializeUtil from \"../initialize/InitializeUtil\";\n\nexport default class Emitter extends Particle {\n  /**\n   * You can use this emit particles.\n   *\n   * It will dispatch follow events:\n   * PARTICLE_CREATED\n   * PARTICLE_UPDATA\n   * PARTICLE_DEAD\n   *\n   * @class Emitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   * for example {damping:0.01,bindEmitter:false}\n   */\n  constructor(conf = {}) {\n    super(conf);\n\n    this.particles = [];\n    this.behaviours = [];\n    this.initializes = [];\n\n    this.emitTime = 0;\n    this.emitSpeed = 0;\n    this.totalTime = -1;\n\n    /**\n     * The friction coefficient for all particle emit by This;\n     * @property damping\n     * @type {Number}\n     * @default 0.006\n     */\n    this.damping = 0.006;\n\n    /**\n     * If bindEmitter the particles can bind this emitter's property;\n     * @property bindEmitter\n     * @type {Boolean}\n     * @default true\n     */\n    this.bindEmitter = true;\n\n    /**\n     * The number of particles per second emit (a [particle]/b [s]);\n     * @property rate\n     * @type {Rate}\n     * @default Rate(1, .1)\n     */\n    this.rate = new Rate(1, 0.1);\n\n    this.name = \"Emitter\";\n    this.id = Puid.id(this.name);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   * @param {Number} emitTime begin emit time;\n   * @param {String} life the life of this emitter\n   */\n  emit(totalTime, life) {\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = Util.initValue(totalTime, Infinity);\n\n    if (life === true || life === \"life\" || life === \"destroy\") {\n      this.life = totalTime === \"once\" ? 1 : this.totalTime;\n    } else if (!isNaN(life)) {\n      this.life = life;\n    }\n\n    this.rate.init();\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this.totalTime = -1;\n    this.emitTime = 0;\n    this.stoped = true;\n  }\n\n  preEmit(time) {\n    let oldStoped = this.stoped;\n    let oldEmitTime = this.emitTime;\n    let oldTotalTime = this.totalTime;\n\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = time;\n    this.rate.init();\n\n    const step = 0.0167;\n    while (time > step) {\n      time -= step;\n      this.update(step);\n    }\n\n    this.stoped = oldStoped;\n    this.emitTime = oldEmitTime + Math.max(time, 0);\n    this.totalTime = oldTotalTime;\n  }\n\n  /**\n   * remove current all particles\n   * @method removeAllParticles\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n    while (i--) this.particles[i].dead = true;\n  }\n\n  /**\n   * add initialize to this emitter\n   * @method addSelfInitialize\n   */\n  addSelfInitialize(initialize) {\n    if (initialize[\"init\"]) {\n      initialize.init(this);\n    } else {\n      this.initAll();\n    }\n  }\n\n  /**\n   * add the Initialize to particles;\n   *\n   * you can use initializes array:for example emitter.addInitialize(initialize1,initialize2,initialize3);\n   * @method addInitialize\n   * @param {Initialize} initialize like this new Radius(1, 12)\n   */\n  addInitialize(...rest) {\n    let i = rest.length;\n    while (i--) this.initializes.push(rest[i]);\n  }\n\n  /**\n   * remove the Initialize\n   * @method removeInitialize\n   * @param {Initialize} initialize a initialize\n   */\n  removeInitialize(initializer) {\n    const index = this.initializes.indexOf(initializer);\n    if (index > -1) this.initializes.splice(index, 1);\n  }\n\n  /**\n   * remove all Initializes\n   * @method removeInitializers\n   */\n  removeAllInitializers() {\n    Util.emptyArray(this.initializes);\n  }\n\n  /**\n   * add the Behaviour to particles;\n   *\n   * you can use Behaviours array:emitter.addBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addBehaviour\n   * @param {Behaviour} behaviour like this new Color('random')\n   */\n  addBehaviour(...rest) {\n    let i = arguments.length;\n    while (i--) {\n      let behaviour = rest[i];\n      this.behaviours.push(behaviour);\n      if (behaviour.parents) behaviour.parents.push(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour\n   * @method removeBehaviour\n   * @param {Behaviour} behaviour a behaviour\n   */\n  removeBehaviour(behaviour) {\n    let index = this.behaviours.indexOf(behaviour);\n    this.behaviours.splice(index, 1);\n\n    if (behaviour.parents) {\n      index = behaviour.parents.indexOf(behaviour);\n      behaviour.parents.splice(index, 1);\n    }\n\n    return index;\n  }\n\n  /**\n   * remove all behaviours\n   * @method removeAllBehaviours\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  // emitter update\n  update(time) {\n    this.age += time;\n    if (this.age >= this.life || this.dead) this.destroy();\n\n    this.emitting(time);\n    this.integrate(time);\n  }\n\n  integrate(time) {\n    if (!this.parent) return;\n\n    const damping = 1 - this.damping;\n    this.parent.integrator.calculate(this, time, damping);\n\n    const length = this.particles.length;\n    let i, particle;\n\n    for (i = length - 1; i >= 0; i--) {\n      particle = this.particles[i];\n\n      // particle update\n      particle.update(time, i);\n      this.parent.integrator.calculate(particle, time, damping);\n      this.dispatch(\"PARTICLE_UPDATE\", particle);\n\n      // check dead\n      if (particle.dead) {\n        this.dispatch(\"PARTICLE_DEAD\", particle);\n\n        this.parent.pool.expire(particle);\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch(event, target) {\n    this.parent && this.parent.dispatchEvent(event, target);\n    this.bindEvent && this.dispatchEvent(event, target);\n  }\n\n  emitting(time) {\n    if (this.totalTime === \"once\") {\n      let i;\n      const length = this.rate.getValue(99999);\n\n      if (length > 0) this.emitSpeed = length;\n      for (i = 0; i < length; i++) this.createParticle();\n      this.totalTime = \"none\";\n    } else {\n      this.emitTime += time;\n\n      if (this.emitTime < this.totalTime) {\n        const length = this.rate.getValue(time);\n        let i;\n\n        if (length > 0) this.emitSpeed = length;\n        for (i = 0; i < length; i++) this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * create single particle;\n   *\n   * can use emit({x:10},new Gravity(10),{'particleUpdate',fun}) or emit([{x:10},new Initialize],new Gravity(10),{'particleUpdate',fun})\n   * @method removeAllParticles\n   */\n  createParticle(initialize, behaviour) {\n    const particle = this.parent.pool.get(Particle);\n    this.setupParticle(particle, initialize, behaviour);\n    this.dispatch(\"PARTICLE_CREATED\", particle);\n\n    return particle;\n  }\n\n  setupParticle(particle, initialize, behaviour) {\n    let initializes = this.initializes;\n    let behaviours = this.behaviours;\n\n    if (initialize) initializes = Util.toArray(initialize);\n    if (behaviour) behaviours = Util.toArray(behaviour);\n\n    particle.reset();\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    this.particles.push(particle);\n  }\n\n  remove() {\n    this.stop();\n    Util.destroyAll(this.particles);\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    this.dead = true;\n    this.remove();\n    this.removeAllInitializers();\n    this.removeAllBehaviours();\n    this.parent && this.parent.removeEmitter(this);\n  }\n}\n\nEventDispatcher.bind(Emitter);\n","import Emitter from \"./Emitter\";\n\nexport default class BehaviourEmitter extends Emitter {\n  /**\n   * The BehaviourEmitter class inherits from Proton.Emitter\n   *\n   * use the BehaviourEmitter you can add behaviours to self;\n   * @class Proton.BehaviourEmitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   */\n  constructor(conf) {\n    super(conf);\n\n    this.selfBehaviours = [];\n  }\n\n  /**\n   * add the Behaviour to emitter;\n   *\n   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addSelfBehaviour\n   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')\n   */\n  addSelfBehaviour(...rest) {\n    let i,\n      length = rest.length;\n\n    for (i = 0; i < length; i++) {\n      let behaviour = rest[i];\n      this.selfBehaviours.push(behaviour);\n      behaviour.initialize(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour for self\n   * @method removeSelfBehaviour\n   * @param {Proton.Behaviour} behaviour a behaviour\n   */\n  removeSelfBehaviour(behaviour) {\n    const index = this.selfBehaviours.indexOf(behaviour);\n    if (index > -1) this.selfBehaviours.splice(index, 1);\n  }\n\n  update(time) {\n    super.update(time);\n\n    if (!this.sleep) {\n      const length = this.selfBehaviours.length;\n      let i;\n\n      for (i = 0; i < length; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, time, i);\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Emitter from \"./Emitter\";\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from Proton.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class Proton.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} conf the parameters object;\n   */\n  constructor(mouseTarget, ease, conf) {\n    super(conf);\n\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    this.mousemoveHandler = e => this.mousemove.call(this, e);\n    this.mousedownHandler = e => this.mousedown.call(this, e);\n    this.mouseupHandler = e => this.mouseup.call(this, e);\n\n    this.mouseTarget.addEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this._allowEmitting = false;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX === 0) {\n      this.p.x += (e.layerX - this.p.x) * this.ease;\n      this.p.y += (e.layerY - this.p.y) * this.ease;\n    } else if (e.offsetX || e.offsetX === 0) {\n      this.p.x += (e.offsetX - this.p.x) * this.ease;\n      this.p.y += (e.offsetY - this.p.y) * this.ease;\n    }\n\n    if (this._allowEmitting) super.emit(\"once\");\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n}\n","import Pool from \"../core/Pool\";\n\nexport default class BaseRenderer {\n    constructor(element, stroke) {\n        this.pool = new Pool();\n        this.element = element;\n        this.stroke = stroke;\n        this.circleConf = { isCircle: true };\n\n        this.initHandler();\n        this.name = \"BaseRenderer\";\n    }\n\n    setStroke(color = \"#000000\", thinkness = 1) {\n        this.stroke = { color, thinkness };\n    }\n\n    initHandler() {\n        this._protonUpdateHandler = () => {\n            this.onProtonUpdate.call(this);\n        };\n\n        this._protonUpdateAfterHandler = () => {\n            this.onProtonUpdateAfter.call(this);\n        };\n\n        this._emitterAddedHandler = emitter => {\n            this.onEmitterAdded.call(this, emitter);\n        };\n\n        this._emitterRemovedHandler = emitter => {\n            this.onEmitterRemoved.call(this, emitter);\n        };\n\n        this._particleCreatedHandler = particle => {\n            this.onParticleCreated.call(this, particle);\n        };\n\n        this._particleUpdateHandler = particle => {\n            this.onParticleUpdate.call(this, particle);\n        };\n\n        this._particleDeadHandler = particle => {\n            this.onParticleDead.call(this, particle);\n        };\n    }\n\n    init(proton) {\n        this.parent = proton;\n\n        proton.addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n        proton.addEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        proton.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n        proton.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n        proton.addEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        proton.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n        proton.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n    }\n\n    resize(width, height) {}\n\n    destroy() {\n        this.remove();\n    }\n\n    remove(proton) {\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE\",\n            this._protonUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        this.parent.removeEventListener(\n            \"EMITTER_ADDED\",\n            this._emitterAddedHandler\n        );\n        this.parent.removeEventListener(\n            \"EMITTER_REMOVED\",\n            this._emitterRemovedHandler\n        );\n\n        this.parent.removeEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_UPDATE\",\n            this._particleUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_DEAD\",\n            this._particleDeadHandler\n        );\n\n        this.parent = null;\n    }\n\n    onProtonUpdate() {}\n    onProtonUpdateAfter() {}\n\n    onEmitterAdded(emitter) {}\n    onEmitterRemoved(emitter) {}\n\n    onParticleCreated(particle) {}\n    onParticleUpdate(particle) {}\n    onParticleDead(particle) {}\n}\n","import ImgUtil from \"../utils/ImgUtil\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class CanvasRenderer extends BaseRenderer {\n    constructor(element) {\n        super(element);\n\n        this.stroke = null;\n        this.context = this.element.getContext(\"2d\");\n        this.bufferCache = {};\n        this.name = \"CanvasRenderer\";\n    }\n\n    resize(width, height) {\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    onProtonUpdate() {\n        this.context.clearRect(0, 0, this.element.width, this.element.height);\n    }\n\n    onParticleCreated(particle) {\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            particle.color = particle.color || \"#ff0000\";\n        }\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.body) {\n            if (particle.body instanceof Image) this.drawImage(particle);\n        } else {\n            this.drawCircle(particle);\n        }\n    }\n\n    onParticleDead(particle) {\n        particle.body = null;\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        particle.body = img;\n    }\n\n    // private drawCircle\n    drawImage(particle) {\n        const w = (particle.body.width * particle.scale) | 0;\n        const h = (particle.body.height * particle.scale) | 0;\n        const x = particle.p.x - w / 2;\n        const y = particle.p.y - h / 2;\n\n        if (!!particle.color) {\n            if (!particle.data[\"buffer\"])\n                particle.data.buffer = this.createBuffer(particle.body);\n\n            const bufContext = particle.data.buffer.getContext(\"2d\");\n            bufContext.clearRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalAlpha = particle.alpha;\n            bufContext.drawImage(particle.body, 0, 0);\n\n            bufContext.globalCompositeOperation = \"source-atop\";\n            bufContext.fillStyle = ColorUtil.rgbToHex(particle.rgb);\n            bufContext.fillRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalCompositeOperation = \"source-over\";\n            bufContext.globalAlpha = 1;\n\n            this.context.drawImage(\n                particle.data.buffer,\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height,\n                x,\n                y,\n                w,\n                h\n            );\n        } else {\n            this.context.save();\n\n            this.context.globalAlpha = particle.alpha;\n            this.context.translate(particle.p.x, particle.p.y);\n            this.context.rotate(MathUtil.degreeTransform(particle.rotation));\n            this.context.translate(-particle.p.x, -particle.p.y);\n            this.context.drawImage(\n                particle.body,\n                0,\n                0,\n                particle.body.width,\n                particle.body.height,\n                x,\n                y,\n                w,\n                h\n            );\n\n            this.context.globalAlpha = 1;\n            this.context.restore();\n        }\n    }\n\n    // private drawCircle --\n    drawCircle(particle) {\n        if (particle.rgb) {\n            this.context.fillStyle = `rgba(${particle.rgb.r},${particle.rgb.g},${particle.rgb.b},${particle.alpha})`;\n        } else {\n            this.context.fillStyle = particle.color;\n        }\n\n        // draw circle\n        this.context.beginPath();\n        this.context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n        );\n\n        if (this.stroke) {\n            this.context.strokeStyle = this.stroke.color;\n            this.context.lineWidth = this.stroke.thinkness;\n            this.context.stroke();\n        }\n\n        this.context.closePath();\n        this.context.fill();\n    }\n\n    // private createBuffer\n    createBuffer(image) {\n        if (image instanceof Image) {\n            const size = image.width + \"_\" + image.height;\n            let canvas = this.bufferCache[size];\n\n            if (!canvas) {\n                canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                this.bufferCache[size] = canvas;\n            }\n\n            return canvas;\n        }\n    }\n}\n","import DomUtil from \"../utils/DomUtil\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class DomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.transform3d = false;\n    this.name = \"DomRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n      this.element.appendChild(particle.body);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (this.bodyReady(particle)) {\n      if (this.transform3d)\n        DomUtil.transform3d(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n      else\n        DomUtil.transform(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n\n      particle.body.style.opacity = particle.alpha;\n      if (particle.body.isCircle) {\n        particle.body.style.backgroundColor = particle.color || \"#ff0000\";\n      }\n    }\n  }\n\n  onParticleDead(particle) {\n    if (this.bodyReady(particle)) {\n      this.element.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n  }\n\n  bodyReady(particle) {\n    return (\n      typeof particle.body === \"object\" &&\n      particle.body &&\n      !particle.body.isInner\n    );\n  }\n\n  // private\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = this.pool.get(img, particle);\n    DomUtil.resize(particle.body, img.width, img.height);\n\n    this.element.appendChild(particle.body);\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body, particle);\n  }\n\n  // private --\n  createCircle(particle) {\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      2 * particle.radius,\n      2 * particle.radius\n    );\n    dom.style.borderRadius = `${particle.radius}px`;\n\n    if (this.stroke) {\n      dom.style.borderColor = this.stroke.color;\n      dom.style.borderWidth = `${this.stroke.thinkness}px`;\n    }\n    dom.isCircle = true;\n\n    return dom;\n  }\n\n  createSprite(body, particle) {\n    const url = typeof body === \"string\" ? body : body.src;\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      body.width,\n      body.height\n    );\n    dom.style.backgroundImage = `url(${url})`;\n\n    return dom;\n  }\n}\n","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class EaselRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.name = \"EaselRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      this.createSprite(particle);\n    } else {\n      this.createCircle(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      particle.body.x = particle.p.x;\n      particle.body.y = particle.p.y;\n\n      particle.body.alpha = particle.alpha;\n      particle.body.scaleX = particle.body.scaleY = particle.scale;\n      particle.body.rotation = particle.rotation;\n    }\n  }\n\n  onParticleDead(particle) {\n    if (particle.body) {\n      particle.body.parent && particle.body.parent.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n\n    if (particle.graphics) this.pool.expire(particle.graphics);\n  }\n\n  // private\n  createSprite(particle) {\n    particle.body = this.pool.get(particle.body);\n\n    if (particle.body.parent) return;\n    if (particle.body[\"image\"]) {\n      particle.body.regX = particle.body.image.width / 2;\n      particle.body.regY = particle.body.image.height / 2;\n    }\n  }\n\n  createCircle(particle) {\n    const graphics = this.pool.get(createjs.Graphics);\n\n    if (this.stroke) {\n      if (this.stroke instanceof String) graphics.beginStroke(this.stroke);\n      else graphics.beginStroke(\"#000000\");\n    }\n    graphics\n      .beginFill(particle.color || \"#ff0000\")\n      .drawCircle(0, 0, particle.radius);\n\n    const shape = this.pool.get(createjs.Shape, [graphics]);\n\n    particle.body = shape;\n    particle.graphics = graphics;\n  }\n}\n","import Rectangle from \"../math/Rectangle\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class PixelRenderer extends BaseRenderer {\n  constructor(element, rectangle) {\n    super(element);\n\n    this.context = this.element.getContext(\"2d\");\n    this.imageData = null;\n    this.rectangle = null;\n    this.rectangle = rectangle;\n    this.createImageData(rectangle);\n\n    this.name = \"PixelRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  createImageData(rectangle) {\n    this.rectangle = rectangle\n      ? rectangle\n      : new Rectangle(0, 0, this.element.width, this.element.height);\n    this.imageData = this.context.createImageData(\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.imageData = this.context.getImageData(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n  }\n\n  onProtonUpdateAfter() {\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onParticleCreated(particle) {}\n\n  onParticleUpdate(particle) {\n    if (this.imageData) {\n      this.setPixel(\n        this.imageData,\n        Math.floor(particle.p.x - this.rectangle.x),\n        Math.floor(particle.p.y - this.rectangle.y),\n        particle\n      );\n    }\n  }\n\n  setPixel(imagedata, x, y, particle) {\n    const rgb = particle.rgb;\n    if (x < 0 || x > this.element.width || y < 0 || y > this.elementwidth)\n      return;\n\n    const i = ((y >> 0) * imagedata.width + (x >> 0)) * 4;\n\n    imagedata.data[i] = rgb.r;\n    imagedata.data[i + 1] = rgb.g;\n    imagedata.data[i + 2] = rgb.b;\n    imagedata.data[i + 3] = particle.alpha * 255;\n  }\n\n  onParticleDead(particle) {}\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nlet PIXIClass;\nexport default class PixiRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.color = false;\n    this.setColor = false;\n    this.blendMode = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.setPIXI(window.PIXI);\n\n    this.name = \"PixiRenderer\";\n  }\n\n  setPIXI(PIXI) {\n    try {\n      PIXIClass = PIXI || { Sprite: {} };\n      this.createFromImage =\n        PIXIClass.Sprite.from || PIXIClass.Sprite.fromImage;\n    } catch (e) {}\n  }\n\n  onProtonUpdate() {}\n\n  /**\n   * @param particle\n   */\n  onParticleCreated(particle) {\n    if (particle.body) {\n      particle.body = this.pool.get(particle.body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n    }\n\n    if (this.blendMode) {\n      particle.body.blendMode = this.blendMode;\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleUpdate(particle) {\n    this.transform(particle, particle.body);\n\n    if (this.setColor === true || this.color === true) {\n      particle.body.tint = ColorUtil.getHex16FromParticle(particle);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleDead(particle) {\n    this.element.removeChild(particle.body);\n    this.pool.expire(particle.body);\n    particle.body = null;\n  }\n\n  destroy(particles) {\n    super.destroy();\n    this.pool.destroy();\n\n    let i = particles.length;\n    while (i--) {\n      let particle = particles[i];\n      if (particle.body) {\n        this.element.removeChild(particle.body);\n      }\n    }\n  }\n\n  transform(particle, target) {\n    target.x = particle.p.x;\n    target.y = particle.p.y;\n\n    target.alpha = particle.alpha;\n\n    target.scale.x = particle.scale;\n    target.scale.y = particle.scale;\n\n    // using cached version of MathUtil.PI_180 for slight performance increase.\n    target.rotation = particle.rotation * MathUtil.PI_180; // MathUtil.PI_180;\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body);\n  }\n\n  createSprite(body) {\n    const sprite = body.isInner\n      ? this.createFromImage(body.src)\n      : new PIXIClass.Sprite(body);\n\n    sprite.anchor.x = 0.5;\n    sprite.anchor.y = 0.5;\n\n    return sprite;\n  }\n\n  createCircle(particle) {\n    const graphics = new PIXIClass.Graphics();\n\n    if (this.stroke) {\n      const stroke = this.stroke instanceof String ? this.stroke : 0x000000;\n      graphics.beginStroke(stroke);\n    }\n\n    graphics.beginFill(particle.color || 0x008ced);\n    graphics.drawCircle(0, 0, particle.radius);\n    graphics.endFill();\n\n    return graphics;\n  }\n}\n","import Mat3 from \"../math/Mat3\";\n\nexport default class MStack {\n  constructor() {\n    this.mats = [];\n    this.size = 0;\n\n    for (let i = 0; i < 20; i++)\n      this.mats.push(Mat3.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n\n  set(m, i) {\n    if (i === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[i - 1], m, this.mats[i]);\n\n    this.size = Math.max(this.size, i + 1);\n  }\n\n  push(m) {\n    if (this.size === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[this.size - 1], m, this.mats[this.size]);\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size > 0) this.size--;\n  }\n\n  top() {\n    return this.mats[this.size - 1];\n  }\n}\n","import Mat3 from '../math/Mat3';\nimport BaseRenderer from './BaseRenderer';\n\nimport Util from '../utils/Util';\nimport ImgUtil from '../utils/ImgUtil';\nimport MStack from '../utils/MStack';\nimport DomUtil from '../utils/DomUtil';\nimport WebGLUtil from '../utils/WebGLUtil';\nimport MathUtil from '../math/MathUtil';\n\nexport default class WebGLRenderer extends BaseRenderer {\n\n    constructor(element) {\n        super(element);\n\n        this.gl = this.element.getContext('experimental-webgl', { antialias: true, stencil: false, depth: false });\n        if (!this.gl) alert('Sorry your browser do not suppest WebGL!');\n\n        this.initVar();\n        this.setMaxRadius();\n        this.initShaders();\n        this.initBuffers();\n\n        this.gl.blendEquation(this.gl.FUNC_ADD);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        this.gl.enable(this.gl.BLEND);\n\n        this.addImg2Body = this.addImg2Body.bind(this);\n\n        this.name = 'WebGLRenderer';\n    }\n\n    init(proton) {\n        super.init(proton);\n        this.resize(this.element.width, this.element.height);\n    }\n\n    resize(width, height) {\n        this.umat[4] = -2;\n        this.umat[7] = 1;\n\n        this.smat[0] = 1 / width;\n        this.smat[4] = 1 / height;\n\n        this.mstack.set(this.umat, 0);\n        this.mstack.set(this.smat, 1);\n\n        this.gl.viewport(0, 0, width, height);\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    setMaxRadius(radius) {\n        this.circleCanvasURL = this.createCircle(radius);\n    }\n\n    getVertexShader() {\n        const vsSource = ['uniform vec2 viewport;', 'attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 tMat;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'void main() {', 'vec3 v = tMat * vec3(aVertexPosition, 1.0);', 'gl_Position = vec4(v.x, v.y, 0, 1);', 'vTextureCoord = aTextureCoord;', 'alpha = tMat[0][2];', '}'].join('\\n');\n        return vsSource;\n    }\n\n    getFragmentShader() {\n        const fsSource = ['precision mediump float;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'uniform sampler2D uSampler;', 'uniform vec4 color;', 'uniform bool useTexture;', 'uniform vec3 uColor;', 'void main() {', 'vec4 textureColor = texture2D(uSampler, vTextureCoord);', 'gl_FragColor = textureColor * vec4(uColor, 1.0);', 'gl_FragColor.w *= alpha;', '}'].join('\\n');\n        return fsSource;\n    }\n\n    initVar() {\n        this.mstack = new MStack();\n        this.umat = Mat3.create([2, 0, 1, 0, -2, 0, -1, 1, 1]);\n        this.smat = Mat3.create([1 / 100, 0, 1, 0, 1 / 100, 0, 0, 0, 1]);\n        this.texturebuffers = {};\n    }\n\n    blendEquation(A) {\n        this.gl.blendEquation(this.gl[A]);\n    }\n\n    blendFunc(A, B) {\n        this.gl.blendFunc(this.gl[A], this.gl[B]);\n    }\n\n    getShader(gl, str, fs) {\n        const shader = fs ? gl.createShader(gl.FRAGMENT_SHADER) : gl.createShader(gl.VERTEX_SHADER);\n\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert(gl.getShaderInfoLog(shader));\n            return null;\n        }\n\n        return shader;\n    }\n\n    initShaders() {\n        const fragmentShader = this.getShader(this.gl, this.getFragmentShader(), true);\n        const vertexShader = this.getShader(this.gl, this.getVertexShader(), false);\n\n        this.sprogram = this.gl.createProgram();\n        this.gl.attachShader(this.sprogram, vertexShader);\n        this.gl.attachShader(this.sprogram, fragmentShader);\n        this.gl.linkProgram(this.sprogram);\n\n        if (!this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS))\n            alert('Could not initialise shaders');\n\n        this.gl.useProgram(this.sprogram);\n        this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, 'aVertexPosition');\n        this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, 'aTextureCoord');\n        this.gl.enableVertexAttribArray(this.sprogram.tca);\n        this.gl.enableVertexAttribArray(this.sprogram.vpa);\n\n        this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, 'tMat');\n        this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, 'uSampler');\n        this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, 'useTexture');\n        this.sprogram.color = this.gl.getUniformLocation(this.sprogram, 'uColor');\n        this.gl.uniform1i(this.sprogram.useTex, 1);\n    };\n\n    initBuffers() {\n        const vs = [0, 3, 1, 0, 2, 3];\n        let idx;\n\n        this.unitIBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vs), this.gl.STATIC_DRAW);\n\n        let i;\n        let ids = [];\n        for (i = 0; i < 100; i++) ids.push(i);\n        idx = new Uint16Array(ids);\n\n        this.unitI33 = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n\n        ids = [];\n        for (i = 0; i < 100; i++) ids.push(i, i + 1, i + 2);\n        idx = new Uint16Array(ids);\n\n        this.stripBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n    };\n\n    createCircle(raidus) {\n        this.circleCanvasRadius = WebGLUtil.nhpot(Util.initValue(raidus, 32));\n        const canvas = DomUtil.createCanvas('circle_canvas', this.circleCanvasRadius * 2, this.circleCanvasRadius * 2);\n        const context = canvas.getContext('2d');\n\n        context.beginPath();\n        context.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fillStyle = '#FFF';\n        context.fill();\n\n        return canvas.toDataURL();\n    };\n\n    drawImg2Canvas(particle) {\n        const _w = particle.body.width;\n        const _h = particle.body.height;\n\n        const _width = WebGLUtil.nhpot(particle.body.width);\n        const _height = WebGLUtil.nhpot(particle.body.height);\n\n        const _scaleX = particle.body.width / _width;\n        const _scaleY = particle.body.height / _height;\n\n        if (!this.texturebuffers[particle.data.src])\n            this.texturebuffers[particle.data.src] = [this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer()];\n\n        particle.data.texture = this.texturebuffers[particle.data.src][0];\n        particle.data.vcBuffer = this.texturebuffers[particle.data.src][1];\n        particle.data.tcBuffer = this.texturebuffers[particle.data.src][2];\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _scaleX, 0.0, 0.0, _scaleY, _scaleY, _scaleY]), this.gl.STATIC_DRAW);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _w, 0.0, 0.0, _h, _w, _h]), this.gl.STATIC_DRAW);\n\n        const context = particle.data.canvas.getContext('2d');\n        const data = context.getImageData(0, 0, _width, _height);\n\n        this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n        this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n        particle.data.textureLoaded = true;\n        particle.data.textureWidth = _w;\n        particle.data.textureHeight = _h;\n    }\n\n    onProtonUpdate() {\n        // this.gl.clearColor(0, 0, 0, 1);\n        // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    }\n\n    onParticleCreated(particle) {\n        particle.data.textureLoaded = false;\n        particle.data.tmat = Mat3.create();\n        particle.data.tmat[8] = 1;\n        particle.data.imat = Mat3.create();\n        particle.data.imat[8] = 1;\n\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            ImgUtil.getImgFromCache(this.circleCanvasURL, this.addImg2Body, particle);\n            particle.data.oldScale = particle.radius / this.circleCanvasRadius;\n        }\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        if (particle.dead) return;\n        particle.body = img;\n        particle.data.src = img.src;\n        particle.data.canvas = ImgUtil.getCanvasFromCache(img);\n        particle.data.oldScale = 1;\n\n        this.drawImg2Canvas(particle);\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.data.textureLoaded) {\n            this.updateMatrix(particle);\n\n            this.gl.uniform3f(this.sprogram.color, particle.rgb.r / 255, particle.rgb.g / 255, particle.rgb.b / 255);\n            this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, false, this.mstack.top());\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n            this.gl.uniform1i(this.sprogram.samplerUniform, 0);\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n\n            this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n\n            this.mstack.pop();\n        }\n    }\n\n    onParticleDead(particle) { }\n\n    updateMatrix(particle) {\n        const moveOriginMatrix = WebGLUtil.makeTranslation(-particle.data.textureWidth / 2, -particle.data.textureHeight / 2);\n        const translationMatrix = WebGLUtil.makeTranslation(particle.p.x, particle.p.y);\n\n        const angel = particle.rotation * (MathUtil.PI_180);\n        const rotationMatrix = WebGLUtil.makeRotation(angel);\n\n        const scale = particle.scale * particle.data.oldScale;\n        const scaleMatrix = WebGLUtil.makeScale(scale, scale);\n        let matrix = WebGLUtil.matrixMultiply(moveOriginMatrix, scaleMatrix);\n\n        matrix = WebGLUtil.matrixMultiply(matrix, rotationMatrix);\n        matrix = WebGLUtil.matrixMultiply(matrix, translationMatrix);\n\n        Mat3.inverse(matrix, particle.data.imat);\n        matrix[2] = particle.alpha;\n\n        this.mstack.push(matrix);\n    }\n}","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.name = \"CustomRenderer\";\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class LineZone extends Zone {\n  constructor(x1, y1, x2, y2, direction) {\n    super();\n\n    if (x2 - x1 >= 0) {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n    } else {\n      this.x1 = x2;\n      this.y1 = y2;\n      this.x2 = x1;\n      this.y2 = y1;\n    }\n\n    this.dx = this.x2 - this.x1;\n    this.dy = this.y2 - this.y1;\n\n    this.minx = Math.min(this.x1, this.x2);\n    this.miny = Math.min(this.y1, this.y2);\n    this.maxx = Math.max(this.x1, this.x2);\n    this.maxy = Math.max(this.y1, this.y2);\n\n    this.dot = this.x2 * this.y1 - this.x1 * this.y2;\n    this.xxyy = this.dx * this.dx + this.dy * this.dy;\n\n    this.gradient = this.getGradient();\n    this.length = this.getLength();\n    this.direction = Util.initValue(direction, \">\");\n  }\n\n  getPosition() {\n    this.random = Math.random();\n\n    this.vector.x =\n      this.x1 + this.random * this.length * Math.cos(this.gradient);\n    this.vector.y =\n      this.y1 + this.random * this.length * Math.sin(this.gradient);\n\n    return this.vector;\n  }\n\n  getDirection(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = B === 0 ? 1 : B;\n\n    if ((A * x + B * y + C) * D > 0) return true;\n    else return false;\n  }\n\n  getDistance(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = A * x + B * y + C;\n\n    return D / Math.sqrt(this.xxyy);\n  }\n\n  getSymmetric(v) {\n    const tha2 = v.getGradient();\n    const tha1 = this.getGradient();\n    const tha = 2 * (tha1 - tha2);\n\n    const oldx = v.x;\n    const oldy = v.y;\n\n    v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n\n    return v;\n  }\n\n  getGradient() {\n    return Math.atan2(this.dy, this.dx);\n  }\n\n  rangeOut(particle) {\n    const angle = Math.abs(this.getGradient());\n\n    if (angle <= MathUtil.PI / 4) {\n      if (particle.p.x <= this.maxx && particle.p.x >= this.minx) return true;\n    } else {\n      if (particle.p.y <= this.maxy && particle.p.y >= this.miny) return true;\n    }\n\n    return false;\n  }\n\n  getLength() {\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (\n        this.direction === \">\" ||\n        this.direction === \"R\" ||\n        this.direction === \"right\" ||\n        this.direction === \"down\"\n      ) {\n        if (!this.rangeOut(particle)) return;\n        if (this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      } else {\n        if (!this.rangeOut(particle)) return;\n        if (!this.getDirection(particle.p.x, particle.p.y))\n          particle.dead = true;\n      }\n    } else if (this.crossType === \"bound\") {\n      if (!this.rangeOut(particle)) return;\n\n      if (this.getDistance(particle.p.x, particle.p.y) <= particle.radius) {\n        if (this.dx === 0) {\n          particle.v.x *= -1;\n        } else if (this.dy === 0) {\n          particle.v.y *= -1;\n        } else {\n          this.getSymmetric(particle.v);\n        }\n      }\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, LineZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class CircleZone extends Zone {\n  constructor(x, y, radius) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n\n    this.angle = 0;\n    this.center = { x, y };\n  }\n\n  getPosition() {\n    this.angle = MathUtil.PIx2 * Math.random();\n    this.randomRadius = Math.random() * this.radius;\n\n    this.vector.x = this.x + this.randomRadius * Math.cos(this.angle);\n    this.vector.y = this.y + this.randomRadius * Math.sin(this.angle);\n\n    return this.vector;\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  crossing(particle) {\n    const d = particle.p.distanceTo(this.center);\n\n    if (this.crossType === \"dead\") {\n      if (d - particle.radius > this.radius) particle.dead = true;\n    } else if (this.crossType === \"bound\") {\n      if (d + particle.radius >= this.radius) this.getSymmetric(particle);\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, CircleZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n\n  getSymmetric(particle) {\n    let tha2 = particle.v.getGradient();\n    let tha1 = this.getGradient(particle);\n\n    let tha = 2 * (tha1 - tha2);\n    let oldx = particle.v.x;\n    let oldy = particle.v.y;\n\n    particle.v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    particle.v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n  }\n\n  getGradient(particle) {\n    return (\n      -MathUtil.PI_2 +\n      Math.atan2(particle.p.y - this.center.y, particle.p.x - this.center.x)\n    );\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class RectZone extends Zone {\n  constructor(x, y, width, height) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + Math.random() * this.width;\n    this.vector.y = this.y + Math.random() * this.height;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    // particle dead zone\n    if (this.crossType === \"dead\") {\n      if (particle.p.x + particle.radius < this.x) particle.dead = true;\n      else if (particle.p.x - particle.radius > this.x + this.width)\n        particle.dead = true;\n\n      if (particle.p.y + particle.radius < this.y) particle.dead = true;\n      else if (particle.p.y - particle.radius > this.y + this.height)\n        particle.dead = true;\n    }\n\n    // particle bound zone\n    else if (this.crossType === \"bound\") {\n      if (particle.p.x - particle.radius < this.x) {\n        particle.p.x = this.x + particle.radius;\n        particle.v.x *= -1;\n      } else if (particle.p.x + particle.radius > this.x + this.width) {\n        particle.p.x = this.x + this.width - particle.radius;\n        particle.v.x *= -1;\n      }\n\n      if (particle.p.y - particle.radius < this.y) {\n        particle.p.y = this.y + particle.radius;\n        particle.v.y *= -1;\n      } else if (particle.p.y + particle.radius > this.y + this.height) {\n        particle.p.y = this.y + this.height - particle.radius;\n        particle.v.y *= -1;\n      }\n    }\n\n    // particle cross zone\n    else if (this.crossType === \"cross\") {\n      if (particle.p.x + particle.radius < this.x && particle.v.x <= 0)\n        particle.p.x = this.x + this.width + particle.radius;\n      else if (\n        particle.p.x - particle.radius > this.x + this.width &&\n        particle.v.x >= 0\n      )\n        particle.p.x = this.x - particle.radius;\n\n      if (particle.p.y + particle.radius < this.y && particle.v.y <= 0)\n        particle.p.y = this.y + this.height + particle.radius;\n      else if (\n        particle.p.y - particle.radius > this.y + this.height &&\n        particle.v.y >= 0\n      )\n        particle.p.y = this.y - particle.radius;\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\n\nexport default class ImageZone extends Zone {\n  constructor(imageData, x, y, d) {\n    super();\n\n    this.reset(imageData, x, y, d);\n  }\n\n  reset(imageData, x, y, d) {\n    this.imageData = imageData;\n    this.x = Util.initValue(x, 0);\n    this.y = Util.initValue(y, 0);\n    this.d = Util.initValue(d, 2);\n\n    this.vectors = [];\n    this.setVectors();\n  }\n\n  setVectors() {\n    let i, j;\n    const length1 = this.imageData.width;\n    const length2 = this.imageData.height;\n\n    for (i = 0; i < length1; i += this.d) {\n      for (j = 0; j < length2; j += this.d) {\n        let index = ((j >> 0) * length1 + (i >> 0)) * 4;\n\n        if (this.imageData.data[index + 3] > 0) {\n          this.vectors.push({ x: i + this.x, y: j + this.y });\n        }\n      }\n    }\n\n    return this.vector;\n  }\n\n  getBound(x, y) {\n    var index = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n    if (this.imageData.data[index + 3] > 0) return true;\n    else return false;\n  }\n\n  getPosition() {\n    const vector = Util.getRandFromArray(this.vectors);\n    return this.vector.copy(vector);\n  }\n\n  getColor(x, y) {\n    x -= this.x;\n    y -= this.y;\n    var i = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n\n    return {\n      r: this.imageData.data[i],\n      g: this.imageData.data[i + 1],\n      b: this.imageData.data[i + 2],\n      a: this.imageData.data[i + 3]\n    };\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.dead = true;\n      else particle.dead = false;\n    } else if (this.crossType === \"bound\") {\n      if (!this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.v.negate();\n    }\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport CircleZone from \"../zone/CircleZone\";\nimport PointZone from \"../zone/PointZone\";\nimport LineZone from \"../zone/LineZone\";\nimport RectZone from \"../zone/RectZone\";\n\nexport default {\n  addEventListener(proton, func) {\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", () => func());\n  },\n\n  getStyle(color = \"#ff0000\") {\n    const rgb = ColorUtil.hexToRgb(color);\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;\n  },\n\n  drawZone(proton, canvas, zone, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (zone instanceof PointZone) {\n        context.beginPath();\n        context.fillStyle = style;\n        context.arc(zone.x, zone.y, 10, 0, Math.PI * 2, true);\n        context.fill();\n        context.closePath();\n      } else if (zone instanceof LineZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.moveTo(zone.x1, zone.y1);\n        context.lineTo(zone.x2, zone.y2);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof RectZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.drawRect(zone.x, zone.y, zone.width, zone.height);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof CircleZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.arc(zone.x, zone.y, zone.radius, 0, Math.PI * 2, true);\n        context.stroke();\n        context.closePath();\n      }\n    });\n  },\n\n  drawEmitter(proton, canvas, emitter, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      context.beginPath();\n      context.fillStyle = style;\n      context.arc(emitter.p.x, emitter.p.y, 10, 0, Math.PI * 2, true);\n      context.fill();\n      context.closePath();\n    });\n  }\n};\n","import Proton from \"./core/Proton\";\nimport Particle from \"./core/Particle\";\nimport Pool from \"./core/Pool\";\n\nimport Util from \"./utils/Util\";\nimport ColorUtil from \"./utils/ColorUtil\";\nimport MathUtil from \"./math/MathUtil\";\nimport Vector2D from \"./math/Vector2D\";\nimport Polar2D from \"./math/Polar2D\";\nimport Mat3 from \"./math/Mat3\";\nimport Span from \"./math/Span\";\nimport ArraySpan from \"./math/ArraySpan\";\nimport Rectangle from \"./math/Rectangle\";\nimport ease from \"./math/ease\";\n\nimport Rate from \"./initialize/Rate\";\nimport Initialize from \"./initialize/Initialize\";\nimport Life from \"./initialize/Life\";\nimport Position from \"./initialize/Position\";\nimport Velocity from \"./initialize/Velocity\";\nimport Mass from \"./initialize/Mass\";\nimport Radius from \"./initialize/Radius\";\nimport Body from \"./initialize/Body\";\n\nimport Behaviour from \"./behaviour/Behaviour\";\nimport Force from \"./behaviour/Force\";\nimport Attraction from \"./behaviour/Attraction\";\nimport RandomDrift from \"./behaviour/RandomDrift\";\nimport Gravity from \"./behaviour/Gravity\";\nimport Collision from \"./behaviour/Collision\";\nimport CrossZone from \"./behaviour/CrossZone\";\nimport Alpha from \"./behaviour/Alpha\";\nimport Scale from \"./behaviour/Scale\";\nimport Rotate from \"./behaviour/Rotate\";\nimport Color from \"./behaviour/Color\";\nimport Cyclone from \"./behaviour/Cyclone\";\nimport Repulsion from \"./behaviour/Repulsion\";\nimport GravityWell from \"./behaviour/GravityWell\";\n\nimport Emitter from \"./emitter/Emitter\";\nimport BehaviourEmitter from \"./emitter/BehaviourEmitter\";\nimport FollowEmitter from \"./emitter/FollowEmitter\";\n\nimport CanvasRenderer from \"./render/CanvasRenderer\";\nimport DomRenderer from \"./render/DomRenderer\";\nimport EaselRenderer from \"./render/EaselRenderer\";\nimport PixelRenderer from \"./render/PixelRenderer\";\nimport PixiRenderer from \"./render/PixiRenderer\";\nimport WebGLRenderer from \"./render/WebGLRenderer\";\nimport CustomRenderer from \"./render/CustomRenderer\";\n\nimport Zone from \"./zone/Zone\";\nimport LineZone from \"./zone/LineZone\";\nimport CircleZone from \"./zone/CircleZone\";\nimport PointZone from \"./zone/PointZone\";\nimport RectZone from \"./zone/RectZone\";\nimport ImageZone from \"./zone/ImageZone\";\n\nimport Debug from \"./debug/Debug\";\n\n// namespace\nProton.Particle = Particle;\nProton.Pool = Pool;\n\nProton.Util = Util;\nProton.ColorUtil = ColorUtil;\nProton.MathUtil = MathUtil;\nProton.Vector2D = Proton.Vector = Vector2D;\nProton.Polar2D = Proton.Polar = Polar2D;\nProton.ArraySpan = ArraySpan;\nProton.Rectangle = Rectangle;\nProton.Rate = Rate;\nProton.ease = ease;\nProton.Span = Span;\nProton.Mat3 = Mat3;\nProton.getSpan = (a, b, center) => new Span(a, b, center);\nProton.createArraySpan = ArraySpan.createArraySpan;\n\nProton.Initialize = Proton.Init = Initialize;\nProton.Life = Proton.L = Life;\nProton.Position = Proton.P = Position;\nProton.Velocity = Proton.V = Velocity;\nProton.Mass = Proton.M = Mass;\nProton.Radius = Proton.R = Radius;\nProton.Body = Proton.B = Body;\n\nProton.Behaviour = Behaviour;\nProton.Force = Proton.F = Force;\nProton.Attraction = Proton.A = Attraction;\nProton.RandomDrift = Proton.RD = RandomDrift;\nProton.Gravity = Proton.G = Gravity;\nProton.Collision = Collision;\nProton.CrossZone = CrossZone;\nProton.Alpha = Alpha;\nProton.Scale = Proton.S = Scale;\nProton.Rotate = Rotate;\nProton.Color = Color;\nProton.Repulsion = Repulsion;\nProton.Cyclone = Cyclone;\nProton.GravityWell = GravityWell;\n\nProton.Emitter = Emitter;\nProton.BehaviourEmitter = BehaviourEmitter;\nProton.FollowEmitter = FollowEmitter;\n\nProton.Zone = Zone;\nProton.LineZone = LineZone;\nProton.CircleZone = CircleZone;\nProton.PointZone = PointZone;\nProton.RectZone = RectZone;\nProton.ImageZone = ImageZone;\n\nProton.CanvasRenderer = CanvasRenderer;\nProton.DomRenderer = DomRenderer;\nProton.EaselRenderer = EaselRenderer;\nProton.PixiRenderer = PixiRenderer;\nProton.PixelRenderer = PixelRenderer;\nProton.WebGLRenderer = Proton.WebGlRenderer = WebGLRenderer;\nProton.CustomRenderer = CustomRenderer;\n\nProton.Debug = Debug;\nUtil.assign(Proton, ease);\n\n// export\nexport default Proton;\n","/**\n *  RAFManager requestAnimationFrame Manager\n * \n *  Simple package\n * \n *  CODE:\n * \n * \t\t// Add to\n *  \t-- RAFManager.add(func);\n * \n *   \t// Add and carry parameters\n *  \t-- const func = data =>{ console.log(data) };\n *  \t-- RAFManager.add(func, 25, { msg:'hello world!' }); \n * \t\t\n * \t\t// remove\n *  \t-- RAFManager.remove(func);\n *  \t-- RAFManager.stop();\t\n*/\n\n// simple polyfill by https://gist.github.com/paulirish/1579671\n(function () {\n\tlet lastTime = 0;\n\tlet vendors = ['ms', 'moz', 'webkit', 'o'];\n\tfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\twindow.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t\twindow.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']\n\t\t\t|| window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t}\n}());\n\nconst RAFManager = {\n\ttimer: 0,\n\tstate: 'stop',\n\tanimations: [],\n\n\tadd(callback, fps = 60, param = null) {\n\t\tconst n = 60 / fps;\n\t\tconst aniData = { callback, fps, n, param, i: 0 };\n\t\tthis.animations.push(aniData);\n\t\tif (this.animations.length >= 1) this.start();\n\n\t\treturn this;\n\t},\n\n\tgetIndex(callback) {\n\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\tconst aniData = this.animations[i];\n\t\t\tif (aniData.callback === callback) return i;\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tremove(callback) {\n\t\tconst index = this.getIndex(callback);\n\t\tif (index < 0) return;\n\n\t\tthis.deleteMap(callback);\n\t\tif (this.animations.length === 0) this.stop();\n\n\t\treturn this;\n\t},\n\n\tdeleteMap(callback) {\n\t\tconst index = this.getIndex(callback);\n\t\tconst aniData = this.animations[index];\n\t\tfor (let key in aniData) delete aniData[key];\n\n\t\tthis.animations.splice(index, 1);\n\t},\n\n\tstart() {\n\t\tif (this.state === 'start') return;\n\n\t\tthis.state = 'start';\n\t\tthis.tick();\n\t\treturn this;\n\t},\n\n\tstop() {\n\t\tif (this.state === 'stop') return;\n\n\t\tthis.state = 'stop';\n\t\tcancelAnimationFrame(this.timer);\n\t\treturn this;\n\t},\n\n\ttick() {\n\t\tthis.timer = requestAnimationFrame(() => { this.tick(); });\n\n\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\tconst aniData = this.animations[i];\n\t\t\tconst callback = aniData.callback;\n\t\t\tconst param = aniData.param;\n\n\t\t\taniData.i++;\n\t\t\tif (aniData.i >= aniData.n) {\n\t\t\t\tcallback(param);\n\t\t\t\taniData.i = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default RAFManager;","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nclass MouseParticles extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ease = 0.7;\n    this.level = 0;\n    this.LEVEL = 5;\n    this._allowEmitting = true;\n    this.renderProton = this.renderProton.bind(this);\n    this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    this.mouseDownHandler = this.mouseDownHandler.bind(this);\n    this.mouseUpHandler = this.mouseUpHandler.bind(this);\n\n    this.createContainerDom();\n  }\n\n  createContainerDom() {\n    this.dom = document.createElement(\"div\");\n    this.dom.style.position = \"fixed\";\n    this.dom.style.left = \"0px\";\n    this.dom.style.top = \"0px\";\n    this.dom.style.zIndex = 9999;\n    this.dom.style.pointerEvents = \"none\";\n    this.dom.id = `mouse_ps_${(Math.random() * 999999) >> 0}`;\n    document.body.appendChild(this.dom);\n  }\n\n  componentWillUnmount() {\n    try {\n      document.body.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\n      document.body.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\n      document.body.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  componentDidMount() {\n    this.onCanvasInited();\n    this.addMouseEventListener();\n    this.setCullList();\n  }\n\n  onCanvasInited() {\n    this.createProton();\n    RAFManager.add(this.renderProton);\n  }\n\n  addMouseEventListener() {\n    document.body.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\n    document.body.addEventListener(\"mousedown\", this.mouseDownHandler, false);\n    document.body.addEventListener(\"mouseup\", this.mouseUpHandler, false);\n  }\n\n  mouseDownHandler(e) {}\n  mouseUpHandler(e) {}\n\n  mouseMoveHandler(e) {\n    if (this.isCullDom(e)) return;\n    let x,\n      y = 0;\n\n    x = e.clientX;\n    y = e.clientY;\n\n    this.emitter.p.x += (x - this.emitter.p.x) * this.ease;\n    this.emitter.p.y += (y - this.emitter.p.y) * this.ease;\n\n    if (this._allowEmitting) this.emitter.emit(\"once\");\n  }\n\n  setCullList() {\n    this.cullClassList = this.props.cull || \"\";\n    this.cullClassList = this.cullClassList.split(\",\");\n\n    this.LEVEL = this.props.level || 6;\n  }\n\n  isCullDom(e) {\n    this.level = 0;\n\n    if (isInputText(e.target)) return true;\n    if (isTextBox(e.target)) return true;\n    if (!this.cullClassList || !this.cullClassList.length) return false;\n\n    return this.isContain(e.target, this.cullClassList);\n  }\n\n  isContain(element, cullClassList) {\n    if (this.level >= this.LEVEL) return false;\n    if (!element) return false;\n    if (!element.classList) return false;\n    if (element === document.body) return false;\n\n    for (let i = 0; i < cullClassList.length; i++) {\n      if (element.classList.contains(cullClassList[i])) {\n        return true;\n      }\n    }\n    this.level++;\n\n    return this.isContain(element.parentNode, cullClassList);\n  }\n\n  createProton(canvas) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num || 3);\n    emitter.damping = 0.008;\n\n    const life = this.props.life ? new Proton.Life(this.props.life) : new Proton.Life(0.2, 0.5);\n    const color = this.props.color || \"random\";\n    const g = this.props.g;\n    const v = this.props.v || 0.65;\n    const alpha = this.props.alpha || Proton.getSpan(0.25, 0.55);\n    const tha = this.props.tha ? new Proton.Span(this.props.tha[0], this.props.tha[1]) : new Proton.Span(0, 360);\n    let radius = new Proton.Radius(2, 5);\n    if (this.props.radius) {\n      const r = this.props.radius;\n      radius = new Proton.Radius(r * 0.8, r);\n    }\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(radius);\n    emitter.addInitialize(life);\n    emitter.addInitialize(new Proton.Velocity(new Proton.Span(v), tha, \"polar\"));\n\n    emitter.addBehaviour(new Proton.Alpha(alpha));\n    emitter.addBehaviour(new Proton.Color(color));\n    emitter.addBehaviour(new Proton.Scale(1, 0.1));\n    emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.2));\n    if (g) {\n      emitter.addBehaviour(new Proton.G(parseFloat(g)));\n    }\n\n    this.proton.addEmitter(emitter);\n    const renderer = new Proton.DomRenderer(this.dom);\n    this.proton.addRenderer(renderer);\n    this.emitter = emitter;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return <React.Fragment />;\n  }\n}\n\n// utils function\nfunction isInputText(element) {\n  return element instanceof HTMLInputElement && element.type === \"text\";\n}\n\nfunction isTextBox(element) {\n  let tagName = element.tagName.toLowerCase();\n  if (tagName === \"textarea\") return true;\n  if (tagName === \"input\") return true;\n\n  return false;\n}\n\nexport default MouseParticles;\n"],"names":["e","s","PI","PIx2","PI_2","PI_180","N180_PI","Infinity","isInfinity","t","this","randomAToB","i","arguments","length","Math","floor","random","randomFloating","randomColor","toString","slice","randomZone","pow","degreeTransform","toColor16","Symbol","iterator","constructor","prototype","o","TypeError","a","enumerable","configurable","writable","Object","defineProperty","key","n","Function","getOwnPropertyDescriptor","value","get","call","getPrototypeOf","r","create","setPrototypeOf","__proto__","h","ReferenceError","l","u","isArray","P","getRandFromArray","center","b","getValue","initValue","c","d","y","cos","sin","p","f","v","g","createCanvas","document","createElement","id","width","height","style","opacity","position","transform","createDiv","resize","marginLeft","marginTop","willChange","css3","transform3d","charAt","toUpperCase","substr","m","_","drawImage","x","getImageData","clearRect","src","Image","onload","target","k","getContext","emptyArray","toArray","emptyObject","indexOf","classApply","bind","apply","concat","setVectorVal","hasProp","vx","vy","ax","ay","copy","velocity","accelerate","setProp","hasOwnProperty","getSpanValue","destroyAll","destroy","assign","E","A","_index","_cache","getId","getIdFromCache","isBody","isInner","getTarget","T","R","__puid","cache","pop","createOrClone","getCache","push","total","clone","O","w","add","getEmitter","getRenderer","type","proton","emitters","emitSpeed","getEmitterPos","initializes","concatArr","behaviours","name","getCreatedNumber","getCount","pool","container","innerHTML","cssText","join","addEventListener","color","parentNode","body","appendChild","emitterIndex","renderers","rendererIndex","cpool","round","C","S","_listeners","removeEventListener","splice","dispatchEvent","hasEventListener","removeAllEventListeners","I","D","eulerIntegrate","sleep","old","multiplyScalar","mass","clear","V","M","init","remove","parent","EMITTER_ADDED","EMITTER_REMOVED","_fps","PROTON_UPDATE","USE_CLOCK","then","Date","getTime","now","elapsed","amendChangeTabsBug","emittersUpdate","DEFAULT_INTERVAL","PROTON_UPDATE_AFTER","_interval","update","particles","time","getAllParticles","setTimeout","set","stats","integrationType","EULER","integrator","MEASURE","RK2","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_SLEEP","PARTICLE_DEAD","B","L","U","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","getEasing","F","z","atan2","addVectors","subVectors","divideScalar","distanceToSquared","j","N","life","age","dead","sprite","energy","radius","alpha","scale","rotation","easing","rgb","reset","data","removeAllBehaviours","applyBehaviours","max","applyBehaviour","parents","initialize","addBehaviour","H","hexToRgb","substring","parseInt","rgbToHex","getHex16FromParticle","Number","q","G","tha","getX","getY","abs","X","Float32Array","multiply","inverse","multiplyVec2","Y","W","_arr","Z","Q","right","bottom","K","J","startTime","nextTime","timePan","numPan","setSpanValue","$","tt","et","it","lifePan","at","rt","vector","crossType","alert","nt","st","console","error","ot","ht","zone","getPosition","lt","ut","rPan","thaPan","normalizeVelocity","ct","dt","massPan","yt","pt","oldRadius","ft","vt","image","inner","gt","mt","removeBehaviour","bt","_t","force","normalizeForce","calculate","xt","kt","targetPosition","normalizeValue","radiusSq","attractionForce","lengthSq","sub","normalize","Pt","Et","panFoce","delay","addXY","At","Tt","Rt","Ot","emitter","callback","collisionPool","delta","wt","Ct","crossing","St","It","same","alphaA","alphaB","Dt","Vt","scaleA","scaleB","Mt","Bt","rotationA","rotationB","getDirection","Lt","Ut","createArraySpan","colorA","colorB","Ft","zt","jt","angle","span","String","toLowerCase","setAngleAndForce","cangle","cyclone","getGradient","Nt","Ht","qt","Gt","distanceVec","centerPoint","Xt","bindEmitter","rotate","Yt","Wt","stoped","emitTime","totalTime","isNaN","rate","initAll","Array","emitting","integrate","damping","dispatch","expire","bindEvent","createParticle","setupParticle","addBehaviours","stop","removeAllInitializers","removeEmitter","Zt","Qt","selfBehaviours","Kt","Jt","mousemoveHandler","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","mouseTarget","_allowEmitting","layerX","ease","layerY","offsetX","offsetY","window","initEventHandler","$t","te","stroke","thinkness","_protonUpdateHandler","onProtonUpdate","_protonUpdateAfterHandler","onProtonUpdateAfter","_emitterAddedHandler","onEmitterAdded","_emitterRemovedHandler","onEmitterRemoved","_particleCreatedHandler","onParticleCreated","_particleUpdateHandler","onParticleUpdate","_particleDeadHandler","onParticleDead","element","circleConf","isCircle","initHandler","ee","ie","context","addImg2Body","drawCircle","buffer","createBuffer","globalAlpha","globalCompositeOperation","fillStyle","fillRect","save","translate","restore","beginPath","arc","strokeStyle","lineWidth","closePath","fill","bufferCache","ae","re","bodyReady","backgroundColor","removeChild","createCircle","createSprite","borderRadius","borderColor","borderWidth","backgroundImage","createBody","ne","se","addChild","scaleX","scaleY","graphics","regX","regY","createjs","Graphics","beginStroke","beginFill","Shape","oe","he","rectangle","imageData","createImageData","putImageData","setPixel","elementwidth","le","ue","ce","Sprite","createFromImage","from","fromImage","blendMode","setColor","tint","anchor","endFill","setPIXI","PIXI","de","ye","mats","size","pe","gl","antialias","stencil","depth","initVar","setMaxRadius","initShaders","initBuffers","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","fe","umat","smat","mstack","viewport","circleCanvasURL","texturebuffers","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getShader","getFragmentShader","getVertexShader","sprogram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vpa","getAttribLocation","tca","enableVertexAttribArray","tMatUniform","getUniformLocation","samplerUniform","useTex","uniform1i","unitIBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","unitI33","stripBuffer","circleCanvasRadius","toDataURL","createTexture","texture","vcBuffer","tcBuffer","ARRAY_BUFFER","canvas","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","textureLoaded","textureWidth","textureHeight","tmat","imat","oldScale","drawImg2Canvas","updateMatrix","uniform3f","uniformMatrix3fv","top","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","ve","ge","x1","gradient","y1","dy","dx","dot","xxyy","maxx","minx","maxy","miny","direction","rangeOut","getDistance","getSymmetric","x2","y2","min","getLength","me","be","randomRadius","distanceTo","_e","xe","ke","vectors","setVectors","getBound","negate","getStyle","drawZone","moveTo","lineTo","drawRect","drawEmitter","Particle","Pool","Util","ColorUtil","MathUtil","Vector2D","Vector","Polar2D","Polar","ArraySpan","Rectangle","Rate","Span","Mat3","getSpan","Initialize","Init","Life","Position","Velocity","Mass","Radius","Body","Behaviour","Force","Attraction","RandomDrift","RD","Gravity","Collision","CrossZone","Alpha","Scale","Rotate","Color","Repulsion","Cyclone","GravityWell","Emitter","BehaviourEmitter","FollowEmitter","Zone","LineZone","CircleZone","PointZone","RectZone","ImageZone","CanvasRenderer","DomRenderer","EaselRenderer","PixiRenderer","PixelRenderer","WebGLRenderer","WebGlRenderer","CustomRenderer","Debug","requestAnimationFrame","cancelAnimationFrame","timer","state","animations","fps","param","start","getIndex","deleteMap","tick","_React$Component","props","level","LEVEL","renderProton","_this","mouseMoveHandler","mouseDownHandler","mouseUpHandler","createContainerDom","dom","left","zIndex","pointerEvents","onCanvasInited","addMouseEventListener","setCullList","createProton","isCullDom","clientX","clientY","emit","cullClassList","cull","split","HTMLInputElement","tagName","isTextBox","isContain","classList","contains","Proton","num","addInitialize","parseFloat","addEmitter","renderer","addRenderer","React"],"sourceRoot":""}